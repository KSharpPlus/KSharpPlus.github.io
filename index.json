{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Reference | KSharpPlus documentation",
    "keywords": "API Reference Welcome to KSharpPlus API reference. To begin, select a namespace, then a class, from the table of contents on the left."
  },
  "api/KSharpPlus.Clients.BaseKuracordClient.html": {
    "href": "api/KSharpPlus.Clients.BaseKuracordClient.html",
    "title": "Class BaseKuracordClient | KSharpPlus documentation",
    "keywords": "Class BaseKuracordClient Inheritance Object BaseKuracordClient KuracordClient Namespace : KSharpPlus.Clients Assembly : KSharpPlus.dll Syntax public abstract class BaseKuracordClient : IDisposable Constructors | Improve this Doc View Source BaseKuracordClient(KuracordConfiguration) Declaration protected BaseKuracordClient(KuracordConfiguration config) Parameters Type Name Description KuracordConfiguration config Properties | Improve this Doc View Source ApiClient Declaration protected KuracordApiClient ApiClient { get; } Property Value Type Description KuracordApiClient | Improve this Doc View Source Configuration Declaration protected KuracordConfiguration Configuration { get; } Property Value Type Description KuracordConfiguration | Improve this Doc View Source CurrentUser Gets the current user. Declaration public KuracordUser CurrentUser { get; } Property Value Type Description KuracordUser | Improve this Doc View Source Guilds Gets the cached guilds for this client. Declaration public abstract IReadOnlyDictionary<ulong, KuracordGuild> Guilds { get; } Property Value Type Description IReadOnlyDictionary < UInt64 , KuracordGuild > | Improve this Doc View Source Logger Gets the instance of the logger for this client. Declaration public ILogger<BaseKuracordClient> Logger { get; } Property Value Type Description ILogger < BaseKuracordClient > | Improve this Doc View Source UserCache Gets the cached users for this client. Declaration protected ConcurrentDictionary<ulong, KuracordUser> UserCache { get; } Property Value Type Description ConcurrentDictionary < UInt64 , KuracordUser > | Improve this Doc View Source VersionString Gets the string representing the version of K#+. Declaration public string VersionString { get; } Property Value Type Description String Methods | Improve this Doc View Source Dispose() Declaration public abstract void Dispose() | Improve this Doc View Source InitializeAsync() Initializes this client. This method fetches information about current user, application, and voice regions. Declaration public virtual async Task InitializeAsync() Returns Type Description Task"
  },
  "api/KSharpPlus.Clients.html": {
    "href": "api/KSharpPlus.Clients.html",
    "title": "Namespace KSharpPlus.Clients | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Clients Classes BaseKuracordClient KuracordClient KuracordWebhookClient"
  },
  "api/KSharpPlus.Clients.KuracordClient.html": {
    "href": "api/KSharpPlus.Clients.KuracordClient.html",
    "title": "Class KuracordClient | KSharpPlus documentation",
    "keywords": "Class KuracordClient Inheritance Object BaseKuracordClient KuracordClient Inherited Members BaseKuracordClient.ApiClient BaseKuracordClient.Configuration BaseKuracordClient.Logger BaseKuracordClient.VersionString BaseKuracordClient.CurrentUser BaseKuracordClient.UserCache BaseKuracordClient.InitializeAsync() Namespace : KSharpPlus.Clients Assembly : KSharpPlus.dll Syntax public sealed class KuracordClient : BaseKuracordClient Constructors | Improve this Doc View Source KuracordClient(KuracordConfiguration) Initializes a new instance of KuracordClient. Declaration public KuracordClient(KuracordConfiguration config) Parameters Type Name Description KuracordConfiguration config Specifies configuration parameters. Properties | Improve this Doc View Source GatewayUri Declaration public static Uri GatewayUri { get; } Property Value Type Description Uri | Improve this Doc View Source Guilds Gets a list of guilds that this client is in. Note that the guild objects in this list will not be filled in if the specific guilds aren't available (the GuildAvailable or GuildDownloadCompleted events haven't been fired yet) Declaration public override IReadOnlyDictionary<ulong, KuracordGuild> Guilds { get; } Property Value Type Description IReadOnlyDictionary < UInt64 , KuracordGuild > Overrides BaseKuracordClient.Guilds | Improve this Doc View Source Ping Gets the WS latency for this client. Declaration public int Ping { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ConnectAsync() Connects to the gateway Declaration public async Task ConnectAsync() Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when an invalid token was provided. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source CreateGuildAsync(String, Optional<Stream>) Creates a guild. Declaration public Task<KuracordGuild> CreateGuildAsync(string name, Optional<Stream> icon = default(Optional<Stream>)) Parameters Type Name Description String name Name of the guild. Optional < Stream > icon Stream containing the icon for the guild. Returns Type Description Task < KuracordGuild > The created guild. Exceptions Type Condition NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source CreateTextChannelAsync(KuracordGuild, String) Creates a new text channel in the guild. Declaration public Task<KuracordChannel> CreateTextChannelAsync(KuracordGuild guild, string name) Parameters Type Name Description KuracordGuild guild The guild where create the channel. String name Name of the new channel. Returns Type Description Task < KuracordChannel > The newly-created channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source CreateTextChannelAsync(UInt64, String) Creates a new text channel in the guild. Declaration public Task<KuracordChannel> CreateTextChannelAsync(ulong guildId, string name) Parameters Type Name Description UInt64 guildId ID of the guild where create the channel. String name Name of the new channel. Returns Type Description Task < KuracordChannel > The newly-created channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteGuildAsync(KuracordGuild, String) Deletes the guild. Requires the caller to be the owner of the guild. Declaration public Task DeleteGuildAsync(KuracordGuild guild, string password) Parameters Type Name Description KuracordGuild guild The guild to delete. String password Your account password. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client is not the owner of the guild. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteGuildAsync(UInt64, String) Deletes the guild. Requires the caller to be the owner of the guild. Declaration public Task DeleteGuildAsync(ulong guildId, string password) Parameters Type Name Description UInt64 guildId ID of the guild to delete. String password Your account password. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client is not the owner of the guild. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteMessageAsync(KuracordChannel, UInt64) Deletes a message. Declaration public Task DeleteMessageAsync(KuracordChannel channel, ulong messageId) Parameters Type Name Description KuracordChannel channel The channel in where the required message to delete is located. UInt64 messageId ID of the message to be deleted. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteMessageAsync(KuracordMessage) Deletes a message. Declaration public Task DeleteMessageAsync(KuracordMessage message) Parameters Type Name Description KuracordMessage message The message to be deleted. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteMessageAsync(UInt64, UInt64, UInt64) Deletes a message. Declaration public Task DeleteMessageAsync(ulong guildId, ulong channelId, ulong messageId) Parameters Type Name Description UInt64 guildId ID of the guild where the required message to delete is located. UInt64 channelId ID of the channel in where the required message to delete is located. UInt64 messageId ID of the message to be deleted. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DisableCurrentUserAsync() Disables current user. THIS ACTION CANNOT BE UNDONE. Declaration public Task DisableCurrentUserAsync() Returns Type Description Task Exceptions Type Condition NotFoundException Thrown when the user does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DisconnectAsync() Disconnects from the gateway Declaration public async Task DisconnectAsync() Returns Type Description Task | Improve this Doc View Source Dispose() Disposes your KuracordClient. Declaration public override void Dispose() Overrides BaseKuracordClient.Dispose() | Improve this Doc View Source EditMessageAsync(KuracordChannel, UInt64, String) Edits the message. Declaration public Task<KuracordMessage> EditMessageAsync(KuracordChannel channel, ulong messageId, string content) Parameters Type Name Description KuracordChannel channel The channel where the required message to edit is located. UInt64 messageId ID of the message to edit. String content New content. Returns Type Description Task < KuracordMessage > Edited message. Exceptions Type Condition UnauthorizedException Thrown when the client tried to modify a message not sent by them. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source EditMessageAsync(KuracordMessage, String) Edits the message. Declaration public Task<KuracordMessage> EditMessageAsync(KuracordMessage message, string content) Parameters Type Name Description KuracordMessage message The message to edit. String content New content. Returns Type Description Task < KuracordMessage > Edited message. Exceptions Type Condition UnauthorizedException Thrown when the client tried to modify a message not sent by them. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source EditMessageAsync(UInt64, UInt64, UInt64, String) Edits the message. Declaration public Task<KuracordMessage> EditMessageAsync(ulong guildId, ulong channelId, ulong messageId, string content) Parameters Type Name Description UInt64 guildId ID of the guild where the required message to edit is located. UInt64 channelId ID of the channel where the required message to edit is located. UInt64 messageId ID of the message to edit. String content New content. Returns Type Description Task < KuracordMessage > Edited message. Exceptions Type Condition UnauthorizedException Thrown when the client tried to modify a message not sent by them. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source GetChannel(UInt64) Gets a channel from cache. Declaration public KuracordChannel GetChannel(ulong channelId) Parameters Type Name Description UInt64 channelId The ID of the channel to get. Returns Type Description KuracordChannel Requested channel. Will be null if it was not found in cache. Exceptions Type Condition NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetChannelAsync(KuracordGuild, UInt64) Gets a channel Declaration public Task<KuracordChannel> GetChannelAsync(KuracordGuild guild, ulong channelId) Parameters Type Name Description KuracordGuild guild The guild where the required channel is located. UInt64 channelId The ID of the channel to get. Returns Type Description Task < KuracordChannel > Requested channel. Exceptions Type Condition NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetChannelAsync(UInt64, UInt64) Gets a channel Declaration public Task<KuracordChannel> GetChannelAsync(ulong guildId, ulong channelId) Parameters Type Name Description UInt64 guildId ID of the guild where the required channel is located. UInt64 channelId The ID of the channel to get. Returns Type Description Task < KuracordChannel > Requested channel. Exceptions Type Condition NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetGuildAsync(UInt64) Gets a guild. Declaration public async Task<KuracordGuild> GetGuildAsync(ulong id) Parameters Type Name Description UInt64 id ID of the guild to get. Returns Type Description Task < KuracordGuild > The requested Guild. Exceptions Type Condition NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetGuildMemberAsync(KuracordGuild, UInt64) Gets the guild member. Declaration public Task<KuracordMember> GetGuildMemberAsync(KuracordGuild guild, ulong memberId) Parameters Type Name Description KuracordGuild guild The guild to get the member. UInt64 memberId ID of the member to get. Returns Type Description Task < KuracordMember > Requested member. | Improve this Doc View Source GetGuildMemberAsync(UInt64, UInt64) Gets the guild member. Declaration public Task<KuracordMember> GetGuildMemberAsync(ulong guildId, ulong memberId) Parameters Type Name Description UInt64 guildId ID of the guild to get the member. UInt64 memberId ID of the member to get. Returns Type Description Task < KuracordMember > Requested member. | Improve this Doc View Source GetGuildMembersAsync(KuracordGuild) Gets the collection with the guild members. Declaration public Task<IReadOnlyList<KuracordMember>> GetGuildMembersAsync(KuracordGuild guild) Parameters Type Name Description KuracordGuild guild The guild to get the members. Returns Type Description Task < IReadOnlyList < KuracordMember >> Readonly list with the members of the guild | Improve this Doc View Source GetGuildMembersAsync(UInt64) Gets the collection with the guild members. Declaration public Task<IReadOnlyList<KuracordMember>> GetGuildMembersAsync(ulong guildId) Parameters Type Name Description UInt64 guildId ID of the guild to get the members. Returns Type Description Task < IReadOnlyList < KuracordMember >> Readonly list with the members of the guild | Improve this Doc View Source GetInviteInfoAsync(String) Gets an invite info. Declaration public Task<KuracordInviteGuild> GetInviteInfoAsync(string inviteCode) Parameters Type Name Description String inviteCode The invite code. Returns Type Description Task < KuracordInviteGuild > The requested Invite. Exceptions Type Condition NotFoundException Thrown when the invite does not exists. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetMessageAsync(KuracordChannel, UInt64) Returns a specific message. Declaration public Task<KuracordMessage> GetMessageAsync(KuracordChannel channel, ulong messageId) Parameters Type Name Description KuracordChannel channel The channel where the required message is located. UInt64 messageId ID of the message to get. Returns Type Description Task < KuracordMessage > Requested message. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the ViewChannels permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetMessageAsync(UInt64, UInt64, UInt64) Returns a specific message. Declaration public Task<KuracordMessage> GetMessageAsync(ulong guildId, ulong channelId, ulong messageId) Parameters Type Name Description UInt64 guildId ID of the guild where the required message is located. UInt64 channelId ID of the channel where the required message is located. UInt64 messageId ID of the message to get. Returns Type Description Task < KuracordMessage > Requested message. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the ViewChannels permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetMessagesAsync(KuracordChannel, UInt32, Nullable<UInt64>) Returns a list of messages from the last message in the channel. Declaration public Task<IReadOnlyList<KuracordMessage>> GetMessagesAsync(KuracordChannel channel, uint limit = 30U, ulong? before = null) Parameters Type Name Description KuracordChannel channel The channel to get messages from. UInt32 limit Nullable < UInt64 > before Returns Type Description Task < IReadOnlyList < KuracordMessage >> A list of messages from the last message in the channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the ViewChannels permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetMessagesAsync(UInt64, UInt64, UInt32, Nullable<UInt64>) Returns a list of messages from the last message in the channel. ID of the channel to get messages from. Declaration public Task<IReadOnlyList<KuracordMessage>> GetMessagesAsync(ulong guildId, ulong channelId, uint limit = 30U, ulong? before = null) Parameters Type Name Description UInt64 guildId UInt64 channelId UInt32 limit Nullable < UInt64 > before Returns Type Description Task < IReadOnlyList < KuracordMessage >> Exceptions Type Condition UnauthorizedException Thrown when the client does not have the ViewChannels permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetUserAsync(UInt64) Gets a user. Declaration public async Task<KuracordUser> GetUserAsync(ulong userId) Parameters Type Name Description UInt64 userId ID of the user Returns Type Description Task < KuracordUser > User Exceptions Type Condition BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetUserTokenAsync(String, String) Gets the user's token. Declaration public Task<string> GetUserTokenAsync(string email, string password) Parameters Type Name Description String email Email of the user's account. String password Password of the user's account. Returns Type Description Task < String > Token string. | Improve this Doc View Source JoinGuildAsync(String) Joins a guild. Declaration public Task<KuracordGuild> JoinGuildAsync(string inviteCode) Parameters Type Name Description String inviteCode The invite code to the guild to join. Returns Type Description Task < KuracordGuild > The requested guild. Exceptions Type Condition NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyChannelAsync(KuracordChannel, String) Modifies a channel. Declaration public Task<KuracordChannel> ModifyChannelAsync(KuracordChannel channel, string name) Parameters Type Name Description KuracordChannel channel The channel to modify. String name New channel name. Returns Type Description Task < KuracordChannel > Modified channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyChannelAsync(KuracordGuild, UInt64, String) Modifies a channel. Declaration public Task<KuracordChannel> ModifyChannelAsync(KuracordGuild guild, ulong channelId, string name) Parameters Type Name Description KuracordGuild guild The guild where the channel to modify is located. UInt64 channelId ID of the channel to modify. String name New channel name. Returns Type Description Task < KuracordChannel > Modified channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyChannelAsync(UInt64, UInt64, String) Modifies a channel. Declaration public Task<KuracordChannel> ModifyChannelAsync(ulong guildId, ulong channelId, string name) Parameters Type Name Description UInt64 guildId ID of the guild where the channel to modify is located. UInt64 channelId ID of the channel to modify. String name New channel name. Returns Type Description Task < KuracordChannel > Modified channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyGuildAsync(KuracordGuild, String) Modifies a guild. Declaration public Task<KuracordGuild> ModifyGuildAsync(KuracordGuild guild, string name) Parameters Type Name Description KuracordGuild guild The guild to modify. String name New guild name. Returns Type Description Task < KuracordGuild > Modified guild. Exceptions Type Condition NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyGuildAsync(UInt64, String) Modifies a guild. Declaration public Task<KuracordGuild> ModifyGuildAsync(ulong guildId, string name) Parameters Type Name Description UInt64 guildId ID of the guild to modify. String name New guild name. Returns Type Description Task < KuracordGuild > Modified guild. Exceptions Type Condition NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyGuildMemberAsync(KuracordGuild, KuracordMember, String) Modifies the member. Declaration public Task<KuracordMember> ModifyGuildMemberAsync(KuracordGuild guild, KuracordMember member, string nickname) Parameters Type Name Description KuracordGuild guild The guild where the required member to modify is located. KuracordMember member The member to modify. String nickname New member nickname. Returns Type Description Task < KuracordMember > Modified member. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyGuildMemberAsync(KuracordGuild, UInt64, String) Modifies the member. Declaration public Task<KuracordMember> ModifyGuildMemberAsync(KuracordGuild guild, ulong memberId, string nickname) Parameters Type Name Description KuracordGuild guild The guild where the required member to modify is located. UInt64 memberId ID of the member to modify. String nickname New member nickname. Returns Type Description Task < KuracordMember > Modified member. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyGuildMemberAsync(UInt64, KuracordMember, String) Modifies the member. Declaration public Task<KuracordMember> ModifyGuildMemberAsync(ulong guildId, KuracordMember member, string nickname) Parameters Type Name Description UInt64 guildId ID of the guild where the required member to modify is located. KuracordMember member The member to modify. String nickname New member nickname. Returns Type Description Task < KuracordMember > Modified member. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyGuildMemberAsync(UInt64, UInt64, String) Modifies the member. Declaration public Task<KuracordMember> ModifyGuildMemberAsync(ulong guildId, ulong memberId, string nickname) Parameters Type Name Description UInt64 guildId ID of the guild where the required member to modify is located. UInt64 memberId ID of the member to modify. String nickname New member nickname. Returns Type Description Task < KuracordMember > Modified member. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ReconnectAsync(Boolean) Declaration public Task ReconnectAsync(bool startNewSession = false) Parameters Type Name Description Boolean startNewSession Returns Type Description Task | Improve this Doc View Source RegisterUserAsync(String, String, String, Boolean) Registers a new user. Declaration public async Task<KuracordUser> RegisterUserAsync(string username, string email, string password, bool updateCache = false) Parameters Type Name Description String username Username for the new user. String email Email for the new user. String password Password for the new user. Boolean updateCache Should the client adds this user to the cache or not. Defaults to false. Returns Type Description Task < KuracordUser > User with it's token. | Improve this Doc View Source SendMessageAsync(KuracordChannel, String) Sends a message. Declaration public Task<KuracordMessage> SendMessageAsync(KuracordChannel channel, string content) Parameters Type Name Description KuracordChannel channel Channel to send to. String content Message content to send. Returns Type Description Task < KuracordMessage > The Kuracord Message that was sent. Exceptions Type Condition NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source SendMessageAsync(UInt64, UInt64, String) Sends a message. Declaration public Task<KuracordMessage> SendMessageAsync(ulong guildId, ulong channelId, string content) Parameters Type Name Description UInt64 guildId ID of the guild where the channel to send to is located. UInt64 channelId ID of the channel to send to. String content Message content to send. Returns Type Description Task < KuracordMessage > The Kuracord Message that was sent. Exceptions Type Condition NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source UpdateCurrentUserAsync(String, String) Edits current user. Declaration public Task<KuracordUser> UpdateCurrentUserAsync(string username, string discriminator = null) Parameters Type Name Description String username New username. String discriminator New discriminator. Returns Type Description Task < KuracordUser > Updated user. Exceptions Type Condition NotFoundException Thrown when the user does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. Events | Improve this Doc View Source ChannelCreated Fired when a new channel is created. Declaration public event AsyncEventHandler<KuracordClient, ChannelCreateEventArgs> ChannelCreated Event Type Type Description AsyncEventHandler < KuracordClient , ChannelCreateEventArgs > | Improve this Doc View Source ChannelDeleted Fired when a channel is deleted. Declaration public event AsyncEventHandler<KuracordClient, ChannelDeleteEventArgs> ChannelDeleted Event Type Type Description AsyncEventHandler < KuracordClient , ChannelDeleteEventArgs > | Improve this Doc View Source ChannelUpdated Fired when a channel is updated. Declaration public event AsyncEventHandler<KuracordClient, ChannelUpdateEventArgs> ChannelUpdated Event Type Type Description AsyncEventHandler < KuracordClient , ChannelUpdateEventArgs > | Improve this Doc View Source ClientErrored Fired whenever an error occurs within an event handler. Declaration public event AsyncEventHandler<KuracordClient, ClientErrorEventArgs> ClientErrored Event Type Type Description AsyncEventHandler < KuracordClient , ClientErrorEventArgs > | Improve this Doc View Source GuildAvailable Fired when a guild is becoming available. Declaration public event AsyncEventHandler<KuracordClient, GuildCreateEventArgs> GuildAvailable Event Type Type Description AsyncEventHandler < KuracordClient , GuildCreateEventArgs > | Improve this Doc View Source GuildCreated Fired when the user joins a new guild. Declaration public event AsyncEventHandler<KuracordClient, GuildCreateEventArgs> GuildCreated Event Type Type Description AsyncEventHandler < KuracordClient , GuildCreateEventArgs > | Improve this Doc View Source GuildDeleted Fired when the guild was deleted. Declaration public event AsyncEventHandler<KuracordClient, GuildDeleteEventArgs> GuildDeleted Event Type Type Description AsyncEventHandler < KuracordClient , GuildDeleteEventArgs > | Improve this Doc View Source GuildDownloadCompleted Fired when all guilds finish streaming from Kuracord. Declaration public event AsyncEventHandler<KuracordClient, GuildDownloadCompletedEventArgs> GuildDownloadCompleted Event Type Type Description AsyncEventHandler < KuracordClient , GuildDownloadCompletedEventArgs > | Improve this Doc View Source GuildUpdated Fired when a guild is updated. Declaration public event AsyncEventHandler<KuracordClient, GuildUpdateEventArgs> GuildUpdated Event Type Type Description AsyncEventHandler < KuracordClient , GuildUpdateEventArgs > | Improve this Doc View Source Heartbeated Fired on received heartbeat ACK. Declaration public event AsyncEventHandler<KuracordClient, HeartbeatEventArgs> Heartbeated Event Type Type Description AsyncEventHandler < KuracordClient , HeartbeatEventArgs > | Improve this Doc View Source MemberJoined Fired when a new user joins a guild. Declaration public event AsyncEventHandler<KuracordClient, MemberJoinedEventArgs> MemberJoined Event Type Type Description AsyncEventHandler < KuracordClient , MemberJoinedEventArgs > | Improve this Doc View Source MemberLeave Fired when a user is removed from a guild (leave/kick/ban). Declaration public event AsyncEventHandler<KuracordClient, MemberLeaveEventArgs> MemberLeave Event Type Type Description AsyncEventHandler < KuracordClient , MemberLeaveEventArgs > | Improve this Doc View Source MemberUpdated Fired when a guild member is updated. Declaration public event AsyncEventHandler<KuracordClient, MemberUpdatedEventArgs> MemberUpdated Event Type Type Description AsyncEventHandler < KuracordClient , MemberUpdatedEventArgs > | Improve this Doc View Source MessageCreated Fired when a message is created. Declaration public event AsyncEventHandler<KuracordClient, MessageCreateEventArgs> MessageCreated Event Type Type Description AsyncEventHandler < KuracordClient , MessageCreateEventArgs > | Improve this Doc View Source MessageDeleted Fired when a message is deleted. Declaration public event AsyncEventHandler<KuracordClient, MessageDeleteEventArgs> MessageDeleted Event Type Type Description AsyncEventHandler < KuracordClient , MessageDeleteEventArgs > | Improve this Doc View Source MessageUpdated Fired when a message is updated. Declaration public event AsyncEventHandler<KuracordClient, MessageUpdateEventArgs> MessageUpdated Event Type Type Description AsyncEventHandler < KuracordClient , MessageUpdateEventArgs > | Improve this Doc View Source Ready Fired when this client has successfully completed its handshake with the websocket gateway. Declaration public event AsyncEventHandler<KuracordClient, ReadyEventArgs> Ready Event Type Type Description AsyncEventHandler < KuracordClient , ReadyEventArgs > Remarks Guilds will not be populated when this event is fired. See also: GuildAvailable , GuildDownloadCompleted | Improve this Doc View Source Resumed Fired whenever a session is resumed. Declaration public event AsyncEventHandler<KuracordClient, ReadyEventArgs> Resumed Event Type Type Description AsyncEventHandler < KuracordClient , ReadyEventArgs > | Improve this Doc View Source SocketClosed Fired whenever WebSocket connection is terminated. Declaration public event AsyncEventHandler<KuracordClient, SocketCloseEventArgs> SocketClosed Event Type Type Description AsyncEventHandler < KuracordClient , SocketCloseEventArgs > | Improve this Doc View Source SocketErrored Fired whenever a WebSocket error occurs within the client. Declaration public event AsyncEventHandler<KuracordClient, SocketErrorEventArgs> SocketErrored Event Type Type Description AsyncEventHandler < KuracordClient , SocketErrorEventArgs > | Improve this Doc View Source SocketOpened Fired whenever WebSocket connection is established. Declaration public event AsyncEventHandler<KuracordClient, SocketEventArgs> SocketOpened Event Type Type Description AsyncEventHandler < KuracordClient , SocketEventArgs > | Improve this Doc View Source UnknownEvent Fired when an unknown event gets received. Declaration public event AsyncEventHandler<KuracordClient, UnknownEventArgs> UnknownEvent Event Type Type Description AsyncEventHandler < KuracordClient , UnknownEventArgs > | Improve this Doc View Source UserUpdated Fired when properties about the user change. Declaration public event AsyncEventHandler<KuracordClient, UserUpdateEventArgs> UserUpdated Event Type Type Description AsyncEventHandler < KuracordClient , UserUpdateEventArgs > | Improve this Doc View Source Zombied Fired on heartbeat attempt cancellation due to too many failed heartbeats. Declaration public event AsyncEventHandler<KuracordClient, ZombiedEventArgs> Zombied Event Type Type Description AsyncEventHandler < KuracordClient , ZombiedEventArgs >"
  },
  "api/KSharpPlus.Clients.KuracordWebhookClient.html": {
    "href": "api/KSharpPlus.Clients.KuracordWebhookClient.html",
    "title": "Class KuracordWebhookClient | KSharpPlus documentation",
    "keywords": "Class KuracordWebhookClient Inheritance Object KuracordWebhookClient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Clients Assembly : KSharpPlus.dll Syntax public class KuracordWebhookClient Properties | Improve this Doc View Source AvatarUrl Gets or set the avatar override for registered webhooks. Note that this only takes effect when broadcasting. Declaration public string AvatarUrl { get; set; } Property Value Type Description String | Improve this Doc View Source Logger Gets the logger for this client. Declaration public ILogger<KuracordWebhookClient> Logger { get; } Property Value Type Description ILogger < KuracordWebhookClient > | Improve this Doc View Source Username Gets or sets the username override for registered webhooks. Note that this only takes effect when broadcasting. Declaration public string Username { get; set; } Property Value Type Description String"
  },
  "api/KSharpPlus.Entities.Channel.html": {
    "href": "api/KSharpPlus.Entities.Channel.html",
    "title": "Namespace KSharpPlus.Entities.Channel | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Entities.Channel Classes KuracordChannel KuracordDmChannel"
  },
  "api/KSharpPlus.Entities.Channel.KuracordChannel.html": {
    "href": "api/KSharpPlus.Entities.Channel.KuracordChannel.html",
    "title": "Class KuracordChannel | KSharpPlus documentation",
    "keywords": "Class KuracordChannel Inheritance Object SnowflakeObject KuracordChannel KuracordDmChannel Implements IEquatable < KuracordChannel > Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Channel Assembly : KSharpPlus.dll Syntax public class KuracordChannel : SnowflakeObject Properties | Improve this Doc View Source Guild Gets the guild to which this channel belongs. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source GuildId Gets ID of the guild to which this channel belongs. Declaration public ulong? GuildId { get; } Property Value Type Description Nullable < UInt64 > | Improve this Doc View Source Mention Gets this channel's mention string. Declaration public string Mention { get; } Property Value Type Description String | Improve this Doc View Source Name Gets the name of this channel. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Type Gets the type of this channel. Declaration public ChannelType Type { get; } Property Value Type Description ChannelType Methods | Improve this Doc View Source CloneAsync() Clones this channel. This operation will create a channel with identical settings to this one. Note that this will not copy messages. Declaration public Task<KuracordChannel> CloneAsync() Returns Type Description Task < KuracordChannel > Newly-created channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteAsync() Deletes a channel. Declaration public Task DeleteAsync() Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteMessageAsync(KuracordMessage) Deletes a message. Declaration public Task DeleteMessageAsync(KuracordMessage message) Parameters Type Name Description KuracordMessage message The message to be deleted. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteMessageAsync(UInt64) Deletes a message. Declaration public Task DeleteMessageAsync(ulong messageId) Parameters Type Name Description UInt64 messageId ID of the message to be deleted. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source EditMessageAsync(KuracordMessage, String) Edits the message. Declaration public Task<KuracordMessage> EditMessageAsync(KuracordMessage message, string content) Parameters Type Name Description KuracordMessage message The message to edit. String content New content. Returns Type Description Task < KuracordMessage > Edited message. Exceptions Type Condition UnauthorizedException Thrown when the client tried to modify a message not sent by them. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source EditMessageAsync(UInt64, String) Edits the message. Declaration public Task<KuracordMessage> EditMessageAsync(ulong messageId, string content) Parameters Type Name Description UInt64 messageId ID of the message to edit. String content New content. Returns Type Description Task < KuracordMessage > Edited message. Exceptions Type Condition UnauthorizedException Thrown when the client tried to modify a message not sent by them. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source Equals(KuracordChannel) Checks whether this KuracordChannel is equal to another KuracordChannel . Declaration public bool Equals(KuracordChannel e) Parameters Type Name Description KuracordChannel e KuracordChannel to compare to. Returns Type Description Boolean Whether the KuracordChannel is equal to this KuracordChannel . | Improve this Doc View Source Equals(Object) Checks whether this KuracordChannel is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Whether the object is equal to this KuracordChannel . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code for this KuracordChannel . Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this KuracordChannel . Overrides Object.GetHashCode() | Improve this Doc View Source GetMessageAsync(UInt64, Boolean) Returns a specific message. Declaration public async Task<KuracordMessage> GetMessageAsync(ulong messageId, bool skipCache = false) Parameters Type Name Description UInt64 messageId ID of the message to get. Boolean skipCache Whether to always make a REST request. Returns Type Description Task < KuracordMessage > Requested message. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the ViewChannels permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetMessagesAsync(UInt32, Nullable<UInt64>) Returns a list of messages from the last message in the channel. Declaration public Task<IReadOnlyList<KuracordMessage>> GetMessagesAsync(uint limit = 30U, ulong? before = null) Parameters Type Name Description UInt32 limit Nullable < UInt64 > before Returns Type Description Task < IReadOnlyList < KuracordMessage >> A list of messages from the last message in the channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the ViewChannels permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyAsync(String) Modifies a channel. Declaration public Task<KuracordChannel> ModifyAsync(string name) Parameters Type Name Description String name New channel name. Returns Type Description Task < KuracordChannel > Modified channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source SendMessageAsync(String) Sends a message. Declaration public Task<KuracordMessage> SendMessageAsync(string content) Parameters Type Name Description String content Message content to send. Returns Type Description Task < KuracordMessage > The Kuracord Message that was sent. Exceptions Type Condition NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ToString() Returns a string representation of this channel. Declaration public override string ToString() Returns Type Description String String representation of this channel. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(KuracordChannel, KuracordChannel) Gets whether the two KuracordChannel objects are equal. Declaration public static bool operator ==(KuracordChannel e1, KuracordChannel e2) Parameters Type Name Description KuracordChannel e1 First channel to compare. KuracordChannel e2 Second channel to compare. Returns Type Description Boolean Whether the two channels are equal. | Improve this Doc View Source Inequality(KuracordChannel, KuracordChannel) Gets whether the two KuracordChannel objects are not equal. Declaration public static bool operator !=(KuracordChannel e1, KuracordChannel e2) Parameters Type Name Description KuracordChannel e1 First channel to compare. KuracordChannel e2 Second channel to compare. Returns Type Description Boolean Whether the two channels are not equal. Implements IEquatable<>"
  },
  "api/KSharpPlus.Entities.Channel.KuracordDmChannel.html": {
    "href": "api/KSharpPlus.Entities.Channel.KuracordDmChannel.html",
    "title": "Class KuracordDmChannel | KSharpPlus documentation",
    "keywords": "Class KuracordDmChannel Inheritance Object SnowflakeObject KuracordChannel KuracordDmChannel Implements IEquatable < KuracordChannel > Inherited Members KuracordChannel.Name KuracordChannel.Type KuracordChannel.GuildId KuracordChannel.Guild KuracordChannel.Mention KuracordChannel.SendMessageAsync(String) KuracordChannel.GetMessageAsync(UInt64, Boolean) KuracordChannel.GetMessagesAsync(UInt32, Nullable<UInt64>) KuracordChannel.EditMessageAsync(KuracordMessage, String) KuracordChannel.EditMessageAsync(UInt64, String) KuracordChannel.DeleteMessageAsync(KuracordMessage) KuracordChannel.DeleteMessageAsync(UInt64) KuracordChannel.CloneAsync() KuracordChannel.ModifyAsync(String) KuracordChannel.DeleteAsync() KuracordChannel.ToString() KuracordChannel.Equals(Object) KuracordChannel.Equals(KuracordChannel) KuracordChannel.GetHashCode() SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Channel Assembly : KSharpPlus.dll Syntax public class KuracordDmChannel : KuracordChannel Properties | Improve this Doc View Source Recipients Gets the recipients of this direct message. Declaration public IReadOnlyList<KuracordUser> Recipients { get; } Property Value Type Description IReadOnlyList < KuracordUser > Implements IEquatable<>"
  },
  "api/KSharpPlus.Entities.Channel.Message.html": {
    "href": "api/KSharpPlus.Entities.Channel.Message.html",
    "title": "Namespace KSharpPlus.Entities.Channel.Message | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Entities.Channel.Message Classes KuracordAttachment Represents an attachment for a message. KuracordMessage Represents a Kuracord text message. KuracordMessageFile Represents the File that should be sent to Kuracord from the ."
  },
  "api/KSharpPlus.Entities.Channel.Message.KuracordAttachment.html": {
    "href": "api/KSharpPlus.Entities.Channel.Message.KuracordAttachment.html",
    "title": "Class KuracordAttachment | KSharpPlus documentation",
    "keywords": "Class KuracordAttachment Represents an attachment for a message. Inheritance Object SnowflakeObject KuracordAttachment Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Entities.Channel.Message Assembly : KSharpPlus.dll Syntax public class KuracordAttachment : SnowflakeObject"
  },
  "api/KSharpPlus.Entities.Channel.Message.KuracordMessage.html": {
    "href": "api/KSharpPlus.Entities.Channel.Message.KuracordMessage.html",
    "title": "Class KuracordMessage | KSharpPlus documentation",
    "keywords": "Class KuracordMessage Represents a Kuracord text message. Inheritance Object SnowflakeObject KuracordMessage Implements IEquatable < KuracordMessage > Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Channel.Message Assembly : KSharpPlus.dll Syntax public class KuracordMessage : SnowflakeObject Properties | Improve this Doc View Source Attachments Gets files attached to this message. Declaration public IReadOnlyList<KuracordAttachment> Attachments { get; } Property Value Type Description IReadOnlyList < KuracordAttachment > | Improve this Doc View Source Author Gets the user that sent the message. Declaration public KuracordUser Author { get; } Property Value Type Description KuracordUser | Improve this Doc View Source Channel Gets the channel in which the message was sent. Declaration public KuracordChannel Channel { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source ChannelId Gets the ID of the channel in which the message was sent. Declaration public ulong ChannelId { get; } Property Value Type Description UInt64 | Improve this Doc View Source Content Gets the message's content. Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source EditedTimestamp Gets the message's edit timestamp. Will be null if the message was not edited. Declaration public DateTimeOffset? EditedTimestamp { get; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source Guild Gets the guild in which the message was sent. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source IsEdited Gets whether this message was edited. Declaration public bool IsEdited { get; } Property Value Type Description Boolean | Improve this Doc View Source Member Gets the member that sent the message. Declaration public KuracordMember Member { get; } Property Value Type Description KuracordMember Methods | Improve this Doc View Source DeleteAsync() Deletes a message. Declaration public Task DeleteAsync() Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source Equals(KuracordMessage) Checks whether this KuracordMessage is equal to another KuracordMessage . Declaration public bool Equals(KuracordMessage e) Parameters Type Name Description KuracordMessage e KuracordMessage to compare to. Returns Type Description Boolean Whether the KuracordMessage is equal to this KuracordMessage . | Improve this Doc View Source Equals(Object) Checks whether this KuracordMessage is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Whether the object is equal to this KuracordMessage . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code for this KuracordMessage . Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this KuracordMessage . Overrides Object.GetHashCode() | Improve this Doc View Source ModifyAsync(String) Edits the message. Declaration public Task<KuracordMessage> ModifyAsync(string content) Parameters Type Name Description String content New content. Returns Type Description Task < KuracordMessage > Modified message. Exceptions Type Condition UnauthorizedException Thrown when the client tried to modify a message not sent by them. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ToString() Returns a string representation of this message. Declaration public override string ToString() Returns Type Description String String representation of this message. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(KuracordMessage, KuracordMessage) Gets whether the two KuracordMessage objects are equal. Declaration public static bool operator ==(KuracordMessage e1, KuracordMessage e2) Parameters Type Name Description KuracordMessage e1 First message to compare. KuracordMessage e2 Second message to compare. Returns Type Description Boolean Whether the two messages are equal. | Improve this Doc View Source Inequality(KuracordMessage, KuracordMessage) Gets whether the two KuracordMessage objects are not equal. Declaration public static bool operator !=(KuracordMessage e1, KuracordMessage e2) Parameters Type Name Description KuracordMessage e1 First message to compare. KuracordMessage e2 Second message to compare. Returns Type Description Boolean Whether the two messages are not equal. Implements IEquatable<>"
  },
  "api/KSharpPlus.Entities.Channel.Message.KuracordMessageFile.html": {
    "href": "api/KSharpPlus.Entities.Channel.Message.KuracordMessageFile.html",
    "title": "Class KuracordMessageFile | KSharpPlus documentation",
    "keywords": "Class KuracordMessageFile Represents the File that should be sent to Kuracord from the . Inheritance Object KuracordMessageFile Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Entities.Channel.Message Assembly : KSharpPlus.dll Syntax public class KuracordMessageFile Properties | Improve this Doc View Source FileName Gets the FileName of the File. Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source Stream Gets the stream of the File. Declaration public Stream Stream { get; } Property Value Type Description Stream"
  },
  "api/KSharpPlus.Entities.Color.html": {
    "href": "api/KSharpPlus.Entities.Color.html",
    "title": "Namespace KSharpPlus.Entities.Color | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Entities.Color Structs KuracordColor"
  },
  "api/KSharpPlus.Entities.Color.KuracordColor.html": {
    "href": "api/KSharpPlus.Entities.Color.KuracordColor.html",
    "title": "Struct KuracordColor | KSharpPlus documentation",
    "keywords": "Struct KuracordColor Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Color Assembly : KSharpPlus.dll Syntax public readonly struct KuracordColor Constructors | Improve this Doc View Source KuracordColor(Byte, Byte, Byte) Creates a new color with specified values for red, green, and blue components. Declaration public KuracordColor(byte r, byte g, byte b) Parameters Type Name Description Byte r Value of the red component. Byte g Value of the green component. Byte b Value of the blue component. | Improve this Doc View Source KuracordColor(Int32) Creates a new color with specified value. Declaration public KuracordColor(int color) Parameters Type Name Description Int32 color Value of the color. | Improve this Doc View Source KuracordColor(Single, Single, Single) Creates a new color with specified values for red, green, and blue components. Declaration public KuracordColor(float r, float g, float b) Parameters Type Name Description Single r Value of the red component. Single g Value of the green component. Single b Value of the blue component. | Improve this Doc View Source KuracordColor(String) Creates a new color from specified string representation. Declaration public KuracordColor(string color) Parameters Type Name Description String color String representation of the color. Must be 6 hexadecimal characters, optionally with # prefix. Properties | Improve this Doc View Source Aquamarine Aquamarine, or #00FFBF. Declaration public static readonly KuracordColor Aquamarine { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Azure Azure, or #007FFF. Declaration public static readonly KuracordColor Azure { get; } Property Value Type Description KuracordColor | Improve this Doc View Source B Gets the blue component of this color as an 8-bit integer. Declaration public readonly byte B { get; } Property Value Type Description Byte | Improve this Doc View Source Black A near-black color. Due to API limitations, the color is #010101, rather than #000000, as the latter is treated as no color. Declaration public static readonly KuracordColor Black { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Blue Blue, or #0000FF. Declaration public static readonly KuracordColor Blue { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Blurple Dicksord Blurple, or #7289DA. Declaration public static readonly KuracordColor Blurple { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Brown Brown, or #A52A2A. Declaration public static readonly KuracordColor Brown { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Chartreuse Chartreuse, or #7FFF00. Declaration public static readonly KuracordColor Chartreuse { get; } Property Value Type Description KuracordColor | Improve this Doc View Source CornflowerBlue Cornflower blue, or #6495ED. Declaration public static readonly KuracordColor CornflowerBlue { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Cyan Cyan, or #00FFFF. Declaration public static readonly KuracordColor Cyan { get; } Property Value Type Description KuracordColor | Improve this Doc View Source DarkBlue Dark blue, or #00007F. Declaration public static readonly KuracordColor DarkBlue { get; } Property Value Type Description KuracordColor | Improve this Doc View Source DarkButNotBlack Dicksord Dark, But Not Black, or #2C2F33. Declaration public static readonly KuracordColor DarkButNotBlack { get; } Property Value Type Description KuracordColor | Improve this Doc View Source DarkGray Dark gray, or #A9A9A9. Declaration public static readonly KuracordColor DarkGray { get; } Property Value Type Description KuracordColor | Improve this Doc View Source DarkGreen Dark green, or #007F00. Declaration public static readonly KuracordColor DarkGreen { get; } Property Value Type Description KuracordColor | Improve this Doc View Source DarkRed Dark red, or #7F0000. Declaration public static readonly KuracordColor DarkRed { get; } Property Value Type Description KuracordColor | Improve this Doc View Source G Gets the green component of this color as an 8-bit integer. Declaration public readonly byte G { get; } Property Value Type Description Byte | Improve this Doc View Source Gold Gold, or #FFD700. Declaration public static readonly KuracordColor Gold { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Goldenrod Goldenrod, or #DAA520. Declaration public static readonly KuracordColor Goldenrod { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Gray Gray, or #808080. Declaration public static readonly KuracordColor Gray { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Grayple Dicksord Grayple, or #99AAB5. Declaration public static readonly KuracordColor Grayple { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Green Green, or #00FF00. Declaration public static readonly KuracordColor Green { get; } Property Value Type Description KuracordColor | Improve this Doc View Source HotPink Hot pink, or #FF69B4 Declaration public static readonly KuracordColor HotPink { get; } Property Value Type Description KuracordColor | Improve this Doc View Source IndianRed Indian red, or #CD5C5C. Declaration public static readonly KuracordColor IndianRed { get; } Property Value Type Description KuracordColor | Improve this Doc View Source LightGray Light gray, or #808080. Declaration public static readonly KuracordColor LightGray { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Lilac Lilac, or #C8A2C8. Declaration public static readonly KuracordColor Lilac { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Magenta Magenta, or #FF00FF. Declaration public static readonly KuracordColor Magenta { get; } Property Value Type Description KuracordColor | Improve this Doc View Source MidnightBlue Midnight blue, or #191970. Declaration public static readonly KuracordColor MidnightBlue { get; } Property Value Type Description KuracordColor | Improve this Doc View Source None Represents no color, or integer 0; Declaration public static readonly KuracordColor None { get; } Property Value Type Description KuracordColor | Improve this Doc View Source NotQuiteBlack Dicksord Not QuiteBlack, or #23272A. Declaration public static readonly KuracordColor NotQuiteBlack { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Orange Orange, or #FFA500. Declaration public static readonly KuracordColor Orange { get; } Property Value Type Description KuracordColor | Improve this Doc View Source PhthaloBlue Phthalo blue, or #000F89. Declaration public static readonly KuracordColor PhthaloBlue { get; } Property Value Type Description KuracordColor | Improve this Doc View Source PhthaloGreen Phthalo green, or #123524. Declaration public static readonly KuracordColor PhthaloGreen { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Purple Purple, or #800080. Declaration public static readonly KuracordColor Purple { get; } Property Value Type Description KuracordColor | Improve this Doc View Source R Gets the red component of this color as an 8-bit integer. Declaration public readonly byte R { get; } Property Value Type Description Byte | Improve this Doc View Source Red Red, or #FF0000. Declaration public static readonly KuracordColor Red { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Rose Rose, or #FF007F. Declaration public static readonly KuracordColor Rose { get; } Property Value Type Description KuracordColor | Improve this Doc View Source SapGreen Sap green, or #507D2A. Declaration public static readonly KuracordColor SapGreen { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Sienna Sienna, or #882D17. Declaration public static readonly KuracordColor Sienna { get; } Property Value Type Description KuracordColor | Improve this Doc View Source SpringGreen Spring green, or #00FF7F. Declaration public static readonly KuracordColor SpringGreen { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Teal Teal, or #008080. Declaration public static readonly KuracordColor Teal { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Turquoise Turquoise, or #30D5C8. Declaration public static readonly KuracordColor Turquoise { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Value Gets the integer representation of this color. Declaration public readonly int Value { get; } Property Value Type Description Int32 | Improve this Doc View Source VeryDarkGray Very dark gray, or #666666. Declaration public static readonly KuracordColor VeryDarkGray { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Violet Violet, or #EE82EE. Declaration public static readonly KuracordColor Violet { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Wheat Wheat, or #F5DEB3. Declaration public static readonly KuracordColor Wheat { get; } Property Value Type Description KuracordColor | Improve this Doc View Source White White, or #FFFFFF. Declaration public static readonly KuracordColor White { get; } Property Value Type Description KuracordColor | Improve this Doc View Source Yellow Yellow, or #FFFF00. Declaration public static readonly KuracordColor Yellow { get; } Property Value Type Description KuracordColor Methods | Improve this Doc View Source ToString() Gets a string representation of this color. Declaration public override readonly string ToString() Returns Type Description String String representation of this color. Overrides ValueType.ToString() Operators | Improve this Doc View Source Implicit(Int32 to KuracordColor) Declaration public static implicit operator KuracordColor(int value) Parameters Type Name Description Int32 value Returns Type Description KuracordColor"
  },
  "api/KSharpPlus.Entities.Guild.html": {
    "href": "api/KSharpPlus.Entities.Guild.html",
    "title": "Namespace KSharpPlus.Entities.Guild | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Entities.Guild Classes KuracordGuild KuracordMember Represents a Kuracord guild member. KuracordRole"
  },
  "api/KSharpPlus.Entities.Guild.KuracordGuild.html": {
    "href": "api/KSharpPlus.Entities.Guild.KuracordGuild.html",
    "title": "Class KuracordGuild | KSharpPlus documentation",
    "keywords": "Class KuracordGuild Inheritance Object SnowflakeObject KuracordGuild Implements IEquatable < KuracordGuild > Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Guild Assembly : KSharpPlus.dll Syntax public class KuracordGuild : SnowflakeObject Properties | Improve this Doc View Source Channels Gets a dictionary of all the channels associated with this guild. The dictionary's key is the channel ID. Declaration public IReadOnlyDictionary<ulong, KuracordChannel> Channels { get; } Property Value Type Description IReadOnlyDictionary < UInt64 , KuracordChannel > | Improve this Doc View Source Description Gets the guild's description. Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source Disabled Gets whether the guild is disabled. Declaration public bool Disabled { get; } Property Value Type Description Boolean | Improve this Doc View Source IconHash Gets the guild icon's hash. Declaration public string IconHash { get; } Property Value Type Description String | Improve this Doc View Source IconUrl Gets the guild icon's url. Declaration public string IconUrl { get; } Property Value Type Description String | Improve this Doc View Source Members Gets a dictionary of all the members that belong to this guild. The dictionary's key is the member ID. Declaration public IReadOnlyDictionary<ulong, KuracordMember> Members { get; } Property Value Type Description IReadOnlyDictionary < UInt64 , KuracordMember > | Improve this Doc View Source Name Gets the guild's name. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Owner Gets the guild's owner. Declaration public KuracordUser Owner { get; } Property Value Type Description KuracordUser | Improve this Doc View Source OwnerId Gets the ID of the guild's owner. Declaration public ulong OwnerId { get; } Property Value Type Description UInt64 | Improve this Doc View Source Roles Gets a dictionary of all the roles associated with this guild. The dictionary's key is the role ID. Declaration public IReadOnlyDictionary<ulong, KuracordRole> Roles { get; } Property Value Type Description IReadOnlyDictionary < UInt64 , KuracordRole > | Improve this Doc View Source ShortName Gets the guild's short name. Declaration public string ShortName { get; } Property Value Type Description String | Improve this Doc View Source VanityCode Gets the guild's vanity invite code. Declaration public string VanityCode { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateChannelAsync(String, ChannelType) Creates a new channel in this guild. Declaration public Task<KuracordChannel> CreateChannelAsync(string name, ChannelType type) Parameters Type Name Description String name Name of the new channel. ChannelType type Type of the new channel. Returns Type Description Task < KuracordChannel > The newly-created channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source CreateTextChannelAsync(String) Creates a new text channel in this guild. Declaration public Task<KuracordChannel> CreateTextChannelAsync(string name) Parameters Type Name Description String name Name of the new channel. Returns Type Description Task < KuracordChannel > The newly-created channel. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source DeleteAsync(String) Deletes this guild. Requires the caller to be the owner of the guild. Declaration public Task DeleteAsync(string password) Parameters Type Name Description String password Your account password. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client is not the owner of the guild. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source Equals(KuracordGuild) Checks whether this KuracordGuild is equal to another KuracordGuild . Declaration public bool Equals(KuracordGuild e) Parameters Type Name Description KuracordGuild e KuracordGuild to compare to. Returns Type Description Boolean Whether the KuracordGuild is equal to this KuracordGuild . | Improve this Doc View Source Equals(Object) Checks whether this KuracordGuild is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Whether the object is equal to this KuracordGuild . Overrides Object.Equals(Object) | Improve this Doc View Source GetChannelAsync(UInt64) Gets a channel from this guild by its ID. Declaration public async Task<KuracordChannel> GetChannelAsync(ulong channelId) Parameters Type Name Description UInt64 channelId ID of the channel to get. Returns Type Description Task < KuracordChannel > Requested channel. Exceptions Type Condition ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetChannelsAsync() Gets all the channels this guild has. Declaration public Task<IReadOnlyList<KuracordChannel>> GetChannelsAsync() Returns Type Description Task < IReadOnlyList < KuracordChannel >> A collection of this guild's channels. Exceptions Type Condition ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetHashCode() Gets the hash code for this KuracordGuild . Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this KuracordGuild . Overrides Object.GetHashCode() | Improve this Doc View Source GetIconUrl() Gets guild's icon URL. Declaration public string GetIconUrl() Returns Type Description String The URL of the guild's icon. | Improve this Doc View Source GetMemberAsync(UInt64) Gets a member of this guild by their ID. Declaration public async Task<KuracordMember> GetMemberAsync(ulong memberId) Parameters Type Name Description UInt64 memberId ID of the member to get. Returns Type Description Task < KuracordMember > The requested member. Exceptions Type Condition ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetMembersAsync() Retrieves a full list of members from Kuracord. This method will bypass cache. Declaration public async Task<IReadOnlyList<KuracordMember>> GetMembersAsync() Returns Type Description Task < IReadOnlyList < KuracordMember >> A collection of all members in this guild. Exceptions Type Condition ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetRole(UInt64) Gets a role from this guild by its ID. Declaration public KuracordRole GetRole(ulong roleId) Parameters Type Name Description UInt64 roleId ID of the role to get. Returns Type Description KuracordRole Requested role or null if the role does not exists. | Improve this Doc View Source LeaveAsync() Leaves this guild. Declaration public Task LeaveAsync() Returns Type Description Task Exceptions Type Condition ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyAsync(String) Modifies this guild. Declaration public Task<KuracordGuild> ModifyAsync(string name) Parameters Type Name Description String name New guild name. Returns Type Description Task < KuracordGuild > The modified guild object. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyMemberAsync(KuracordMember, String) Modifies the member. Declaration public Task<KuracordMember> ModifyMemberAsync(KuracordMember member, string nickname) Parameters Type Name Description KuracordMember member Member to modify. String nickname New member nickname. Returns Type Description Task < KuracordMember > Modified member. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ModifyMemberAsync(UInt64, String) Modifies the member. Declaration public Task<KuracordMember> ModifyMemberAsync(ulong memberId, string nickname) Parameters Type Name Description UInt64 memberId ID of the member to modify. String nickname New member nickname. Returns Type Description Task < KuracordMember > Modified member. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source RemoveMemberAsync(KuracordMember) Kicks the member from this guild. Declaration public Task RemoveMemberAsync(KuracordMember member) Parameters Type Name Description KuracordMember member The member to kick. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the KickMembers permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source RemoveMemberAsync(UInt64) Kicks the member from this guild. Declaration public Task RemoveMemberAsync(ulong memberId) Parameters Type Name Description UInt64 memberId ID of the member to kick. Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the KickMembers permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source SendMessageAsync(KuracordChannel, String) Sends a message Declaration public Task<KuracordMessage> SendMessageAsync(KuracordChannel channel, string content) Parameters Type Name Description KuracordChannel channel Channel to send to. String content Message content to send. Returns Type Description Task < KuracordMessage > The Kuracord Message that was sent. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the SendMessages permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source SendMessageAsync(UInt64, String) Sends a message Declaration public Task<KuracordMessage> SendMessageAsync(ulong channelId, string content) Parameters Type Name Description UInt64 channelId ID of the channel to send to. String content Message content to send. Returns Type Description Task < KuracordMessage > The Kuracord Message that was sent. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the SendMessages permission. NotFoundException Thrown when the channel does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ToString() Returns a string representation of this guild. Declaration public override string ToString() Returns Type Description String String representation of this guild. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(KuracordGuild, KuracordGuild) Gets whether the two KuracordGuild objects are equal. Declaration public static bool operator ==(KuracordGuild e1, KuracordGuild e2) Parameters Type Name Description KuracordGuild e1 First member to compare. KuracordGuild e2 Second member to compare. Returns Type Description Boolean Whether the two members are equal. | Improve this Doc View Source Inequality(KuracordGuild, KuracordGuild) Gets whether the two KuracordGuild objects are not equal. Declaration public static bool operator !=(KuracordGuild e1, KuracordGuild e2) Parameters Type Name Description KuracordGuild e1 First member to compare. KuracordGuild e2 Second member to compare. Returns Type Description Boolean Whether the two members are not equal. Implements IEquatable<>"
  },
  "api/KSharpPlus.Entities.Guild.KuracordMember.html": {
    "href": "api/KSharpPlus.Entities.Guild.KuracordMember.html",
    "title": "Class KuracordMember | KSharpPlus documentation",
    "keywords": "Class KuracordMember Represents a Kuracord guild member. Inheritance Object SnowflakeObject KuracordMember Implements IEquatable < KuracordMember > Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Guild Assembly : KSharpPlus.dll Syntax public class KuracordMember : SnowflakeObject Properties | Improve this Doc View Source DisplayName Gets this member's display name. Declaration public string DisplayName { get; } Property Value Type Description String | Improve this Doc View Source Guild Gets the guild of which this member is a part of. Declaration public KuracordGuild Guild { get; set; } Property Value Type Description KuracordGuild | Improve this Doc View Source IsOwner Gets whether this member is the Guild owner. Declaration public bool IsOwner { get; } Property Value Type Description Boolean | Improve this Doc View Source JoinedAt Date the user joined the guild Declaration public DateTimeOffset JoinedAt { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Nickname Gets this member's nickname. Declaration public string Nickname { get; } Property Value Type Description String | Improve this Doc View Source User Gets the user associated with this member. Declaration public KuracordUser User { get; } Property Value Type Description KuracordUser Methods | Improve this Doc View Source Equals(KuracordMember) Checks whether this KuracordMember is equal to another KuracordMember . Declaration public bool Equals(KuracordMember e) Parameters Type Name Description KuracordMember e KuracordMember to compare to. Returns Type Description Boolean Whether the KuracordMember is equal to this KuracordMember . | Improve this Doc View Source Equals(Object) Checks whether this KuracordMember is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Whether the object is equal to this KuracordMember . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code for this KuracordMember . Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this KuracordMember . Overrides Object.GetHashCode() | Improve this Doc View Source ModifyAsync(String) Modifies the member. Declaration public Task<KuracordMember> ModifyAsync(string nickname) Parameters Type Name Description String nickname New member nickname. Returns Type Description Task < KuracordMember > Modified member. Exceptions Type Condition UnauthorizedException Thrown when the client does not have the Administrator permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source RemoveAsync() Kicks this member from their guild. Declaration public Task RemoveAsync() Returns Type Description Task Exceptions Type Condition UnauthorizedException Thrown when the client does not have the KickMembers permission. NotFoundException Thrown when the member does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source ToString() Returns a string representation of this member. Declaration public override string ToString() Returns Type Description String String representation of this member. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(KuracordMember, KuracordMember) Gets whether the two KuracordMember objects are equal. Declaration public static bool operator ==(KuracordMember e1, KuracordMember e2) Parameters Type Name Description KuracordMember e1 First member to compare. KuracordMember e2 Second member to compare. Returns Type Description Boolean Whether the two members are equal. | Improve this Doc View Source Inequality(KuracordMember, KuracordMember) Gets whether the two KuracordMember objects are not equal. Declaration public static bool operator !=(KuracordMember e1, KuracordMember e2) Parameters Type Name Description KuracordMember e1 First member to compare. KuracordMember e2 Second member to compare. Returns Type Description Boolean Whether the two members are not equal. Implements IEquatable<>"
  },
  "api/KSharpPlus.Entities.Guild.KuracordRole.html": {
    "href": "api/KSharpPlus.Entities.Guild.KuracordRole.html",
    "title": "Class KuracordRole | KSharpPlus documentation",
    "keywords": "Class KuracordRole Inheritance Object SnowflakeObject KuracordRole Implements IEquatable < KuracordRole > Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Guild Assembly : KSharpPlus.dll Syntax public class KuracordRole : SnowflakeObject Properties | Improve this Doc View Source Color Gets the color of this role. Declaration public KuracordColor Color { get; } Property Value Type Description KuracordColor | Improve this Doc View Source IsHoisted Gets whether this role is hoisted. Declaration public bool IsHoisted { get; } Property Value Type Description Boolean | Improve this Doc View Source Mention Gets a mention string for this role. If the role is mentionable, this string will mention all the users that belong to this role. Declaration public string Mention { get; } Property Value Type Description String | Improve this Doc View Source Name Gets the name of this role. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Permissions Gets the permissions set for this role. Declaration public Permissions Permissions { get; } Property Value Type Description Permissions Methods | Improve this Doc View Source Equals(KuracordRole) Checks whether this KuracordRole is equal to another KuracordRole . Declaration public bool Equals(KuracordRole e) Parameters Type Name Description KuracordRole e KuracordRole to compare to. Returns Type Description Boolean Whether the KuracordRole is equal to this KuracordRole . | Improve this Doc View Source Equals(Object) Checks whether this KuracordRole is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Whether the object is equal to this KuracordRole . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code for this KuracordRole . Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this KuracordRole . Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Returns a string representation of this role. Declaration public override string ToString() Returns Type Description String String representation of this role. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(KuracordRole, KuracordRole) Gets whether the two KuracordRole objects are equal. Declaration public static bool operator ==(KuracordRole e1, KuracordRole e2) Parameters Type Name Description KuracordRole e1 First role to compare. KuracordRole e2 Second role to compare. Returns Type Description Boolean Whether the two roles are equal. | Improve this Doc View Source Inequality(KuracordRole, KuracordRole) Gets whether the two KuracordRole objects are not equal. Declaration public static bool operator !=(KuracordRole e1, KuracordRole e2) Parameters Type Name Description KuracordRole e1 First role to compare. KuracordRole e2 Second role to compare. Returns Type Description Boolean Whether the two roles are not equal. Implements IEquatable<>"
  },
  "api/KSharpPlus.Entities.html": {
    "href": "api/KSharpPlus.Entities.html",
    "title": "Namespace KSharpPlus.Entities | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Entities Classes Optional Helper methods for instantiating an Optional<T> . SnowflakeObject Represents an object in Kuracord API. Structs Optional<T> Represents a wrapper which may or may not have a value. Interfaces IOptional"
  },
  "api/KSharpPlus.Entities.Invite.html": {
    "href": "api/KSharpPlus.Entities.Invite.html",
    "title": "Namespace KSharpPlus.Entities.Invite | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Entities.Invite Classes KuracordInviteGuild Represents a guild to which the user is invited."
  },
  "api/KSharpPlus.Entities.Invite.KuracordInviteGuild.html": {
    "href": "api/KSharpPlus.Entities.Invite.KuracordInviteGuild.html",
    "title": "Class KuracordInviteGuild | KSharpPlus documentation",
    "keywords": "Class KuracordInviteGuild Represents a guild to which the user is invited. Inheritance Object SnowflakeObject KuracordInviteGuild Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.Invite Assembly : KSharpPlus.dll Syntax public class KuracordInviteGuild : SnowflakeObject Properties | Improve this Doc View Source Description Gets the guild's description. Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source Disabled Gets whether the guild is disabled. Declaration public bool Disabled { get; } Property Value Type Description Boolean | Improve this Doc View Source IconHash Gets the guild icon's hash. Declaration public string IconHash { get; } Property Value Type Description String | Improve this Doc View Source IconUrl Gets the guild icon's url. Declaration public string IconUrl { get; } Property Value Type Description String | Improve this Doc View Source Name Gets the name of the guild. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source VanityCode Gets the guild's vanity invite code. Declaration public string VanityCode { get; } Property Value Type Description String Methods | Improve this Doc View Source AcceptAsync() Joins a guild. Declaration public Task<KuracordGuild> AcceptAsync() Returns Type Description Task < KuracordGuild > The requested guild. Exceptions Type Condition NotFoundException Thrown when the guild does not exist. BadRequestException Thrown when an invalid parameter was provided. ServerErrorException Thrown when Kuracord is unable to process the request. | Improve this Doc View Source GetIconUrl() Gets guild's icon URL. Declaration public string GetIconUrl() Returns Type Description String The URL of the guild's icon. | Improve this Doc View Source ToString() Returns a string representation of this invite. Declaration public override string ToString() Returns Type Description String String representation of this invite. Overrides Object.ToString()"
  },
  "api/KSharpPlus.Entities.IOptional.html": {
    "href": "api/KSharpPlus.Entities.IOptional.html",
    "title": "Interface IOptional | KSharpPlus documentation",
    "keywords": "Interface IOptional Namespace : KSharpPlus.Entities Assembly : KSharpPlus.dll Syntax public interface IOptional Properties | Improve this Doc View Source HasValue Declaration bool HasValue { get; } Property Value Type Description Boolean | Improve this Doc View Source RawValue Declaration object RawValue { get; } Property Value Type Description Object"
  },
  "api/KSharpPlus.Entities.Optional.html": {
    "href": "api/KSharpPlus.Entities.Optional.html",
    "title": "Class Optional | KSharpPlus documentation",
    "keywords": "Class Optional Helper methods for instantiating an Optional<T> . Inheritance Object Optional Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Entities Assembly : KSharpPlus.dll Syntax public static class Optional Remarks This class only serves to allow type parameter inference on calls to FromValue<T>(T) or FromNoValue<T>() . Methods | Improve this Doc View Source FromNoValue<T>() Creates a new empty Optional<T> with no value and invalid state. Declaration public static Optional<T> FromNoValue<T>() Returns Type Description Optional <T> Created optional. Type Parameters Name Description T The type that the created instance is wrapping around. | Improve this Doc View Source FromValue<T>(T) Creates a new Optional<T> with specified value and valid state. Declaration public static Optional<T> FromValue<T>(T value) Parameters Type Name Description T value Value to populate the optional with. Returns Type Description Optional <T> Created optional. Type Parameters Name Description T Type of the value."
  },
  "api/KSharpPlus.Entities.Optional-1.html": {
    "href": "api/KSharpPlus.Entities.Optional-1.html",
    "title": "Struct Optional<T> | KSharpPlus documentation",
    "keywords": "Struct Optional<T> Represents a wrapper which may or may not have a value. Implements IEquatable < Optional <T>> IEquatable <T> IOptional Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities Assembly : KSharpPlus.dll Syntax public readonly struct Optional<T> : IOptional Type Parameters Name Description T Type of the value. Constructors | Improve this Doc View Source Optional(T) Creates a new Optional<T> with specified value. Declaration public Optional(T value) Parameters Type Name Description T value Value of this option. Properties | Improve this Doc View Source HasValue Gets whether this Optional<T> has a value. Declaration public readonly bool HasValue { get; } Property Value Type Description Boolean | Improve this Doc View Source Value Gets the value of this Optional<T> . Declaration public readonly T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Equals(T) Checks whether the value of this Optional<T> is equal to specified object. Declaration public readonly bool Equals(T e) Parameters Type Name Description T e Object to compare to. Returns Type Description Boolean Whether the object is equal to the value of this Optional<T> . | Improve this Doc View Source Equals(Optional<T>) Checks whether this Optional<T> is equal to another Optional<T> . Declaration public readonly bool Equals(Optional<T> e) Parameters Type Name Description Optional <T> e Optional<T> to compare to. Returns Type Description Boolean Whether the Optional<T> is equal to this Optional<T> . | Improve this Doc View Source Equals(Object) Checks whether this Optional<T> (or its value) are equal to another object. Declaration public override readonly bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Whether the object is equal to this Optional<T> or its value. Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code for this Optional<T> . Declaration public override readonly int GetHashCode() Returns Type Description Int32 The hash code for this Optional<T> . Overrides ValueType.GetHashCode() | Improve this Doc View Source IfPresent<TTarget>(Func<T, TTarget>) Performs a mapping operation on the current Optional<T> , turning it into an Optional holding a TTarget instance if the source optional contains a value; otherwise, returns an Optional<T> of that same type with no value. Declaration public readonly Optional<TTarget> IfPresent<TTarget>(Func<T, TTarget> mapper) Parameters Type Name Description Func <T, TTarget> mapper The mapping function to apply on the current value if it exists Returns Type Description Optional <TTarget> An Optional<T> containing a value denoted by calling mapper if the current Optional<T> contains a value; otherwise, an empty Optional<T> of the target type. Type Parameters Name Description TTarget The type of the target value returned by mapper | Improve this Doc View Source IsDefined(out T) Determines whether the optional has a value, and the value is non-null. Declaration public readonly bool IsDefined(out T value) Parameters Type Name Description T value The value contained within the optional. Returns Type Description Boolean True if the value is set, and is not null, otherwise false. | Improve this Doc View Source ToString() Returns a string representation of this optional value. Declaration public override readonly string ToString() Returns Type Description String String representation of this optional value. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Optional<T>, T) Declaration public static bool operator ==(Optional<T> opt, T t) Parameters Type Name Description Optional <T> opt T t Returns Type Description Boolean | Improve this Doc View Source Equality(Optional<T>, Optional<T>) Declaration public static bool operator ==(Optional<T> opt1, Optional<T> opt2) Parameters Type Name Description Optional <T> opt1 Optional <T> opt2 Returns Type Description Boolean | Improve this Doc View Source Explicit(Optional<T> to T) Declaration public static explicit operator T(Optional<T> opt) Parameters Type Name Description Optional <T> opt Returns Type Description T | Improve this Doc View Source Implicit(T to Optional<T>) Declaration public static implicit operator Optional<T>(T val) Parameters Type Name Description T val Returns Type Description Optional <T> | Improve this Doc View Source Inequality(Optional<T>, T) Declaration public static bool operator !=(Optional<T> opt, T t) Parameters Type Name Description Optional <T> opt T t Returns Type Description Boolean | Improve this Doc View Source Inequality(Optional<T>, Optional<T>) Declaration public static bool operator !=(Optional<T> opt1, Optional<T> opt2) Parameters Type Name Description Optional <T> opt1 Optional <T> opt2 Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IOptional.RawValue Declaration readonly object IOptional.RawValue { get; } Returns Type Description Object Implements IEquatable<> IEquatable<> IOptional"
  },
  "api/KSharpPlus.Entities.SnowflakeObject.html": {
    "href": "api/KSharpPlus.Entities.SnowflakeObject.html",
    "title": "Class SnowflakeObject | KSharpPlus documentation",
    "keywords": "Class SnowflakeObject Represents an object in Kuracord API. Inheritance Object SnowflakeObject KuracordChannel KuracordAttachment KuracordMessage KuracordGuild KuracordMember KuracordRole KuracordInviteGuild KuracordUser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Entities Assembly : KSharpPlus.dll Syntax public abstract class SnowflakeObject Properties | Improve this Doc View Source CreationTimestamp Gets the date and time this object was created. Declaration public DateTimeOffset CreationTimestamp { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Id Gets the ID of this object. Declaration public ulong Id { get; } Property Value Type Description UInt64"
  },
  "api/KSharpPlus.Entities.User.html": {
    "href": "api/KSharpPlus.Entities.User.html",
    "title": "Namespace KSharpPlus.Entities.User | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Entities.User Classes KuracordUser"
  },
  "api/KSharpPlus.Entities.User.KuracordUser.html": {
    "href": "api/KSharpPlus.Entities.User.KuracordUser.html",
    "title": "Class KuracordUser | KSharpPlus documentation",
    "keywords": "Class KuracordUser Inheritance Object SnowflakeObject KuracordUser Implements IEquatable < KuracordUser > Inherited Members SnowflakeObject.Id SnowflakeObject.CreationTimestamp Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : KSharpPlus.Entities.User Assembly : KSharpPlus.dll Syntax public class KuracordUser : SnowflakeObject Properties | Improve this Doc View Source AvatarUrl Gets the user's avatar URL. Declaration public string AvatarUrl { get; } Property Value Type Description String | Improve this Doc View Source Biography Gets the user's biography. Declaration public string Biography { get; } Property Value Type Description String | Improve this Doc View Source Disabled Gets whether the user is disabled. Only for the current user. Declaration public bool? Disabled { get; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Discriminator Gets the user's 4-digit discriminator. Declaration public string Discriminator { get; } Property Value Type Description String | Improve this Doc View Source Email Gets the user's email address. Only for the current user. Declaration public string Email { get; } Property Value Type Description String | Improve this Doc View Source Flags Gets the user's flags. Declaration public UserFlags? Flags { get; } Property Value Type Description Nullable < UserFlags > | Improve this Doc View Source GuildsMember Gets user's guilds. Only for the current user. Declaration public IReadOnlyList<KuracordMember>? GuildsMember { get; } Property Value Type Description Nullable < IReadOnlyList < KuracordMember >> | Improve this Doc View Source IsBot Gets whether the user is a bot. Declaration public bool IsBot { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCurrent Gets whether this user is the Client which created this object. Declaration public bool IsCurrent { get; } Property Value Type Description Boolean | Improve this Doc View Source Mention Gets the user's mention string. Declaration public string Mention { get; } Property Value Type Description String | Improve this Doc View Source PremiumType Gets the user's premium type. Only for the current user. Declaration public PremiumType? PremiumType { get; } Property Value Type Description Nullable < PremiumType > | Improve this Doc View Source Token Gets the user's token. This field will not be null only if the user was get from RegisterUserAsync(String, String, String, Boolean) method. Declaration public string Token { get; } Property Value Type Description String | Improve this Doc View Source Username Gets this user's username. Declaration public string Username { get; } Property Value Type Description String | Improve this Doc View Source Verified Gets whether the user is verified. Only for the current user. Declaration public bool? Verified { get; } Property Value Type Description Nullable < Boolean > Methods | Improve this Doc View Source Equals(KuracordUser) Checks whether this KuracordUser is equal to another KuracordUser . Declaration public bool Equals(KuracordUser e) Parameters Type Name Description KuracordUser e KuracordUser to compare to. Returns Type Description Boolean Whether the KuracordUser is equal to this KuracordUser . | Improve this Doc View Source Equals(Object) Checks whether this KuracordUser is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Whether the object is equal to this KuracordUser . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code for this KuracordUser . Declaration public override int GetHashCode() Returns Type Description Int32 The hash code for this KuracordUser . Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Returns a string representation of this user. Declaration public override string ToString() Returns Type Description String String representation of this user. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(KuracordUser, KuracordUser) Gets whether the two KuracordUser objects are equal. Declaration public static bool operator ==(KuracordUser e1, KuracordUser e2) Parameters Type Name Description KuracordUser e1 First user to compare. KuracordUser e2 Second user to compare. Returns Type Description Boolean Whether the two users are equal. | Improve this Doc View Source Inequality(KuracordUser, KuracordUser) Gets whether the two KuracordUser objects are not equal. Declaration public static bool operator !=(KuracordUser e1, KuracordUser e2) Parameters Type Name Description KuracordUser e1 First user to compare. KuracordUser e2 Second user to compare. Returns Type Description Boolean Whether the two users are not equal. Implements IEquatable<>"
  },
  "api/KSharpPlus.Enums.Channel.ChannelType.html": {
    "href": "api/KSharpPlus.Enums.Channel.ChannelType.html",
    "title": "Enum ChannelType | KSharpPlus documentation",
    "keywords": "Enum ChannelType Namespace : KSharpPlus.Enums.Channel Assembly : KSharpPlus.dll Syntax public enum ChannelType Fields Name Description Text Indicates that this is a text channel. Unknown Indicates unknown channel type."
  },
  "api/KSharpPlus.Enums.Channel.html": {
    "href": "api/KSharpPlus.Enums.Channel.html",
    "title": "Namespace KSharpPlus.Enums.Channel | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Enums.Channel Enums ChannelType"
  },
  "api/KSharpPlus.Enums.html": {
    "href": "api/KSharpPlus.Enums.html",
    "title": "Namespace KSharpPlus.Enums | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Enums Classes PermissionMethods PermissionStringAttribute Defines a readable name for this permission. Enums PermissionLevel Whether a permission is allowed, denied or unset Permissions Bitwise permission flags. TokenType Token type"
  },
  "api/KSharpPlus.Enums.PermissionLevel.html": {
    "href": "api/KSharpPlus.Enums.PermissionLevel.html",
    "title": "Enum PermissionLevel | KSharpPlus documentation",
    "keywords": "Enum PermissionLevel Whether a permission is allowed, denied or unset Namespace : KSharpPlus.Enums Assembly : KSharpPlus.dll Syntax public enum PermissionLevel Fields Name Description Allowed Said permission is Allowed Denied Said permission is Denied Unset Said permission is Unset"
  },
  "api/KSharpPlus.Enums.PermissionMethods.html": {
    "href": "api/KSharpPlus.Enums.PermissionMethods.html",
    "title": "Class PermissionMethods | KSharpPlus documentation",
    "keywords": "Class PermissionMethods Inheritance Object PermissionMethods Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Enums Assembly : KSharpPlus.dll Syntax public static class PermissionMethods Methods | Improve this Doc View Source Grant(Permissions, Permissions) Grants permissions. Declaration public static Permissions Grant(this Permissions p, Permissions grant) Parameters Type Name Description Permissions p The permissions to add to. Permissions grant Permission to add. Returns Type Description Permissions Permissions with the granted permissions. | Improve this Doc View Source HasPermission(Permissions, Permissions) Calculates whether this permission set contains the given permission. Declaration public static bool HasPermission(this Permissions p, Permissions permission) Parameters Type Name Description Permissions p The permissions to calculate from Permissions permission permission you want to check Returns Type Description Boolean True if the permission contains the given permission, otherwise false. | Improve this Doc View Source Revoke(Permissions, Permissions) Revokes permissions. Declaration public static Permissions Revoke(this Permissions p, Permissions revoke) Parameters Type Name Description Permissions p The permissions to take from. Permissions revoke Permission to take. Returns Type Description Permissions Permissions without the revoked permissions."
  },
  "api/KSharpPlus.Enums.Permissions.html": {
    "href": "api/KSharpPlus.Enums.Permissions.html",
    "title": "Enum Permissions | KSharpPlus documentation",
    "keywords": "Enum Permissions Bitwise permission flags. Namespace : KSharpPlus.Enums Assembly : KSharpPlus.dll Syntax public enum Permissions : long Fields Name Description Administrator Enables full access on a given guild. This also overrides other permissions. BanMembers Allows banning and unbanning members. KickMembers Allows kicking members. LocalAdministrator ??? None Indicates no permissions given. SendMessages Allows sending messages. ViewChannels Allows accessing text and voice channels. Disabling this permission hides channels. Extension Methods PermissionMethods.HasPermission(Permissions) PermissionMethods.Grant(Permissions) PermissionMethods.Revoke(Permissions)"
  },
  "api/KSharpPlus.Enums.PermissionStringAttribute.html": {
    "href": "api/KSharpPlus.Enums.PermissionStringAttribute.html",
    "title": "Class PermissionStringAttribute | KSharpPlus documentation",
    "keywords": "Class PermissionStringAttribute Defines a readable name for this permission. Inheritance Object PermissionStringAttribute Namespace : KSharpPlus.Enums Assembly : KSharpPlus.dll Syntax public sealed class PermissionStringAttribute : Attribute Constructors | Improve this Doc View Source PermissionStringAttribute(String) Defines a readable name for this permission. Declaration public PermissionStringAttribute(string str) Parameters Type Name Description String str Readable name for this permission. Properties | Improve this Doc View Source String Gets the readable name for this permission. Declaration public string String { get; } Property Value Type Description String"
  },
  "api/KSharpPlus.Enums.TokenType.html": {
    "href": "api/KSharpPlus.Enums.TokenType.html",
    "title": "Enum TokenType | KSharpPlus documentation",
    "keywords": "Enum TokenType Token type Namespace : KSharpPlus.Enums Assembly : KSharpPlus.dll Syntax public enum TokenType Fields Name Description Bearer Bearer token type (oAuth) Bot Bot token type User User token type"
  },
  "api/KSharpPlus.Enums.User.html": {
    "href": "api/KSharpPlus.Enums.User.html",
    "title": "Namespace KSharpPlus.Enums.User | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Enums.User Enums PremiumType The type of Nitro subscription on a user's account. UserFlags Represents additional details of a users account."
  },
  "api/KSharpPlus.Enums.User.PremiumType.html": {
    "href": "api/KSharpPlus.Enums.User.PremiumType.html",
    "title": "Enum PremiumType | KSharpPlus documentation",
    "keywords": "Enum PremiumType The type of Nitro subscription on a user's account. Namespace : KSharpPlus.Enums.User Assembly : KSharpPlus.dll Syntax public enum PremiumType : byte Fields Name Description Nitro NitroClassic None"
  },
  "api/KSharpPlus.Enums.User.UserFlags.html": {
    "href": "api/KSharpPlus.Enums.User.UserFlags.html",
    "title": "Enum UserFlags | KSharpPlus documentation",
    "keywords": "Enum UserFlags Represents additional details of a users account. Namespace : KSharpPlus.Enums.User Assembly : KSharpPlus.dll Syntax public enum UserFlags : byte Fields Name Description None"
  },
  "api/KSharpPlus.EventArgs.Channel.ChannelCreateEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Channel.ChannelCreateEventArgs.html",
    "title": "Class ChannelCreateEventArgs | KSharpPlus documentation",
    "keywords": "Class ChannelCreateEventArgs Represents arguments for ChannelCreated event. Inheritance Object KuracordEventArgs ChannelCreateEventArgs Namespace : KSharpPlus.EventArgs.Channel Assembly : KSharpPlus.dll Syntax public class ChannelCreateEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Channel Gets the channel that was created. Declaration public KuracordChannel Channel { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source Guild Gets the guild in which the channel was created. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild"
  },
  "api/KSharpPlus.EventArgs.Channel.ChannelDeleteEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Channel.ChannelDeleteEventArgs.html",
    "title": "Class ChannelDeleteEventArgs | KSharpPlus documentation",
    "keywords": "Class ChannelDeleteEventArgs Represents arguments for ChannelDeleted event. Inheritance Object KuracordEventArgs ChannelDeleteEventArgs Namespace : KSharpPlus.EventArgs.Channel Assembly : KSharpPlus.dll Syntax public class ChannelDeleteEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Channel Gets the channel that was deleted. Declaration public KuracordChannel Channel { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source Guild Gets the guild this channel belonged to. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild"
  },
  "api/KSharpPlus.EventArgs.Channel.ChannelUpdateEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Channel.ChannelUpdateEventArgs.html",
    "title": "Class ChannelUpdateEventArgs | KSharpPlus documentation",
    "keywords": "Class ChannelUpdateEventArgs Represents arguments for ChannelUpdated event. Inheritance Object KuracordEventArgs ChannelUpdateEventArgs Namespace : KSharpPlus.EventArgs.Channel Assembly : KSharpPlus.dll Syntax public class ChannelUpdateEventArgs : KuracordEventArgs Properties | Improve this Doc View Source ChannelAfter Gets the post-update channel. Declaration public KuracordChannel ChannelAfter { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source ChannelBefore Gets the pre-update channel. Declaration public KuracordChannel ChannelBefore { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source Guild Gets the guild in which the update occurred. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild"
  },
  "api/KSharpPlus.EventArgs.Channel.html": {
    "href": "api/KSharpPlus.EventArgs.Channel.html",
    "title": "Namespace KSharpPlus.EventArgs.Channel | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.EventArgs.Channel Classes ChannelCreateEventArgs Represents arguments for ChannelCreated event. ChannelDeleteEventArgs Represents arguments for ChannelDeleted event. ChannelUpdateEventArgs Represents arguments for ChannelUpdated event."
  },
  "api/KSharpPlus.EventArgs.ClientErrorEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.ClientErrorEventArgs.html",
    "title": "Class ClientErrorEventArgs | KSharpPlus documentation",
    "keywords": "Class ClientErrorEventArgs Represents arguments for ClientErrored event. Inheritance Object KuracordEventArgs ClientErrorEventArgs Namespace : KSharpPlus.EventArgs Assembly : KSharpPlus.dll Syntax public class ClientErrorEventArgs : KuracordEventArgs Properties | Improve this Doc View Source EventName Gets the name of the event that threw the exception. Declaration public string EventName { get; } Property Value Type Description String | Improve this Doc View Source Exception Gets the exception thrown by the client. Declaration public Exception Exception { get; } Property Value Type Description Exception"
  },
  "api/KSharpPlus.EventArgs.Guild.GuildCreateEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.GuildCreateEventArgs.html",
    "title": "Class GuildCreateEventArgs | KSharpPlus documentation",
    "keywords": "Class GuildCreateEventArgs Represents arguments for GuildCreated event. Inheritance Object KuracordEventArgs GuildCreateEventArgs Namespace : KSharpPlus.EventArgs.Guild Assembly : KSharpPlus.dll Syntax public class GuildCreateEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Guild Gets the guild that was created. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild"
  },
  "api/KSharpPlus.EventArgs.Guild.GuildDeleteEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.GuildDeleteEventArgs.html",
    "title": "Class GuildDeleteEventArgs | KSharpPlus documentation",
    "keywords": "Class GuildDeleteEventArgs Represents arguments for GuildDeleted event. Inheritance Object KuracordEventArgs GuildDeleteEventArgs Namespace : KSharpPlus.EventArgs.Guild Assembly : KSharpPlus.dll Syntax public class GuildDeleteEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Guild Gets the guild that was deleted. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild"
  },
  "api/KSharpPlus.EventArgs.Guild.GuildDownloadCompletedEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.GuildDownloadCompletedEventArgs.html",
    "title": "Class GuildDownloadCompletedEventArgs | KSharpPlus documentation",
    "keywords": "Class GuildDownloadCompletedEventArgs Represents arguments for GuildDownloadCompleted event. Inheritance Object KuracordEventArgs GuildDownloadCompletedEventArgs Namespace : KSharpPlus.EventArgs.Guild Assembly : KSharpPlus.dll Syntax public class GuildDownloadCompletedEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Guilds Gets the dictionary of guilds that just finished downloading. Declaration public IReadOnlyDictionary<ulong, KuracordGuild> Guilds { get; } Property Value Type Description IReadOnlyDictionary < UInt64 , KuracordGuild >"
  },
  "api/KSharpPlus.EventArgs.Guild.GuildUpdateEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.GuildUpdateEventArgs.html",
    "title": "Class GuildUpdateEventArgs | KSharpPlus documentation",
    "keywords": "Class GuildUpdateEventArgs Represents arguments for GuildUpdated event. Inheritance Object KuracordEventArgs GuildUpdateEventArgs Namespace : KSharpPlus.EventArgs.Guild Assembly : KSharpPlus.dll Syntax public class GuildUpdateEventArgs : KuracordEventArgs Properties | Improve this Doc View Source GuildAfter Gets the guild after it was updated. Declaration public KuracordGuild GuildAfter { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source GuildBefore Gets the guild before it was updated. Declaration public KuracordGuild GuildBefore { get; } Property Value Type Description KuracordGuild"
  },
  "api/KSharpPlus.EventArgs.Guild.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.html",
    "title": "Namespace KSharpPlus.EventArgs.Guild | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.EventArgs.Guild Classes GuildCreateEventArgs Represents arguments for GuildCreated event. GuildDeleteEventArgs Represents arguments for GuildDeleted event. GuildDownloadCompletedEventArgs Represents arguments for GuildDownloadCompleted event. GuildUpdateEventArgs Represents arguments for GuildUpdated event."
  },
  "api/KSharpPlus.EventArgs.Guild.Member.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.Member.html",
    "title": "Namespace KSharpPlus.EventArgs.Guild.Member | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.EventArgs.Guild.Member Classes MemberJoinedEventArgs Represents arguments for MemberJoined event. MemberLeaveEventArgs Represents arguments for event. MemberUpdatedEventArgs Represents arguments for MemberUpdated event."
  },
  "api/KSharpPlus.EventArgs.Guild.Member.MemberJoinedEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.Member.MemberJoinedEventArgs.html",
    "title": "Class MemberJoinedEventArgs | KSharpPlus documentation",
    "keywords": "Class MemberJoinedEventArgs Represents arguments for MemberJoined event. Inheritance Object KuracordEventArgs MemberJoinedEventArgs Namespace : KSharpPlus.EventArgs.Guild.Member Assembly : KSharpPlus.dll Syntax public class MemberJoinedEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Guild Gets the guild the member was added to. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source Member Gets the member that was added. Declaration public KuracordMember Member { get; } Property Value Type Description KuracordMember"
  },
  "api/KSharpPlus.EventArgs.Guild.Member.MemberLeaveEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.Member.MemberLeaveEventArgs.html",
    "title": "Class MemberLeaveEventArgs | KSharpPlus documentation",
    "keywords": "Class MemberLeaveEventArgs Represents arguments for event. Inheritance Object KuracordEventArgs MemberLeaveEventArgs Namespace : KSharpPlus.EventArgs.Guild.Member Assembly : KSharpPlus.dll Syntax public class MemberLeaveEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Guild Gets the guild the member was removed from. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source Member Gets the member that was removed. Declaration public KuracordMember Member { get; } Property Value Type Description KuracordMember"
  },
  "api/KSharpPlus.EventArgs.Guild.Member.MemberUpdatedEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Guild.Member.MemberUpdatedEventArgs.html",
    "title": "Class MemberUpdatedEventArgs | KSharpPlus documentation",
    "keywords": "Class MemberUpdatedEventArgs Represents arguments for MemberUpdated event. Inheritance Object KuracordEventArgs MemberUpdatedEventArgs Namespace : KSharpPlus.EventArgs.Guild.Member Assembly : KSharpPlus.dll Syntax public class MemberUpdatedEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Guild Gets the guild in which the update occurred. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source MemberAfter Get the member with post-update info Declaration public KuracordMember MemberAfter { get; } Property Value Type Description KuracordMember | Improve this Doc View Source MemberBefore Get the member with pre-update info Declaration public KuracordMember MemberBefore { get; } Property Value Type Description KuracordMember | Improve this Doc View Source NicknameAfter Gets the member's new nickname. Declaration public string NicknameAfter { get; } Property Value Type Description String | Improve this Doc View Source NicknameBefore Gets the member's old nickname. Declaration public string NicknameBefore { get; } Property Value Type Description String"
  },
  "api/KSharpPlus.EventArgs.HeartbeatEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.HeartbeatEventArgs.html",
    "title": "Class HeartbeatEventArgs | KSharpPlus documentation",
    "keywords": "Class HeartbeatEventArgs Represents arguments for Heartbeated event. Inheritance Object KuracordEventArgs HeartbeatEventArgs Namespace : KSharpPlus.EventArgs Assembly : KSharpPlus.dll Syntax public class HeartbeatEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Ping Gets the round-trip time of the heartbeat. Declaration public int Ping { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Gets the timestamp of the heartbeat. Declaration public DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset"
  },
  "api/KSharpPlus.EventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.html",
    "title": "Namespace KSharpPlus.EventArgs | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.EventArgs Classes ClientErrorEventArgs Represents arguments for ClientErrored event. HeartbeatEventArgs Represents arguments for Heartbeated event. KuracordEventArgs Common base for all other KuracordClient -related event argument classes. ReadyEventArgs Represents arguments for Ready event. UnknownEventArgs Represents arguments for UnknownEvent event. ZombiedEventArgs Represents arguments for Zombied event."
  },
  "api/KSharpPlus.EventArgs.KuracordEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.KuracordEventArgs.html",
    "title": "Class KuracordEventArgs | KSharpPlus documentation",
    "keywords": "Class KuracordEventArgs Common base for all other KuracordClient -related event argument classes. Inheritance Object KuracordEventArgs ChannelCreateEventArgs ChannelDeleteEventArgs ChannelUpdateEventArgs ClientErrorEventArgs GuildCreateEventArgs GuildDeleteEventArgs GuildDownloadCompletedEventArgs GuildUpdateEventArgs MemberJoinedEventArgs MemberLeaveEventArgs MemberUpdatedEventArgs HeartbeatEventArgs MessageCreateEventArgs MessageDeleteEventArgs MessageUpdateEventArgs ReadyEventArgs SocketCloseEventArgs SocketErrorEventArgs SocketEventArgs UnknownEventArgs UserUpdateEventArgs ZombiedEventArgs Namespace : KSharpPlus.EventArgs Assembly : KSharpPlus.dll Syntax public abstract class KuracordEventArgs : AsyncEventArgs"
  },
  "api/KSharpPlus.EventArgs.Message.html": {
    "href": "api/KSharpPlus.EventArgs.Message.html",
    "title": "Namespace KSharpPlus.EventArgs.Message | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.EventArgs.Message Classes MessageCreateEventArgs Represents arguments for MessageCreated event. MessageDeleteEventArgs Represents arguments for MessageDeleted event. MessageUpdateEventArgs Represents arguments for MessageUpdated event."
  },
  "api/KSharpPlus.EventArgs.Message.MessageCreateEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Message.MessageCreateEventArgs.html",
    "title": "Class MessageCreateEventArgs | KSharpPlus documentation",
    "keywords": "Class MessageCreateEventArgs Represents arguments for MessageCreated event. Inheritance Object KuracordEventArgs MessageCreateEventArgs Namespace : KSharpPlus.EventArgs.Message Assembly : KSharpPlus.dll Syntax public class MessageCreateEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Author Gets the author of the message. Declaration public KuracordUser Author { get; } Property Value Type Description KuracordUser | Improve this Doc View Source Channel Gets the channel this message belongs to. Declaration public KuracordChannel Channel { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source Guild Gets the guild this message belongs to. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source Member Gets the guild member who is the author of the message. Declaration public KuracordMember Member { get; } Property Value Type Description KuracordMember | Improve this Doc View Source Message Gets the message that was created. Declaration public KuracordMessage Message { get; } Property Value Type Description KuracordMessage"
  },
  "api/KSharpPlus.EventArgs.Message.MessageDeleteEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Message.MessageDeleteEventArgs.html",
    "title": "Class MessageDeleteEventArgs | KSharpPlus documentation",
    "keywords": "Class MessageDeleteEventArgs Represents arguments for MessageDeleted event. Inheritance Object KuracordEventArgs MessageDeleteEventArgs Namespace : KSharpPlus.EventArgs.Message Assembly : KSharpPlus.dll Syntax public class MessageDeleteEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Channel Gets the channel this message belonged to. Declaration public KuracordChannel Channel { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source Guild Gets the guild this message belonged to. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source Message Gets the message that was deleted. Declaration public KuracordMessage Message { get; } Property Value Type Description KuracordMessage"
  },
  "api/KSharpPlus.EventArgs.Message.MessageUpdateEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Message.MessageUpdateEventArgs.html",
    "title": "Class MessageUpdateEventArgs | KSharpPlus documentation",
    "keywords": "Class MessageUpdateEventArgs Represents arguments for MessageUpdated event. Inheritance Object KuracordEventArgs MessageUpdateEventArgs Namespace : KSharpPlus.EventArgs.Message Assembly : KSharpPlus.dll Syntax public class MessageUpdateEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Author Gets the author of the message. Declaration public KuracordUser Author { get; } Property Value Type Description KuracordUser | Improve this Doc View Source Channel Gets the channel this message belongs to. Declaration public KuracordChannel Channel { get; } Property Value Type Description KuracordChannel | Improve this Doc View Source Guild Gets the guild this message belongs to. Declaration public KuracordGuild Guild { get; } Property Value Type Description KuracordGuild | Improve this Doc View Source Member Gets the guild member who is the author of the message. Declaration public KuracordMember Member { get; } Property Value Type Description KuracordMember | Improve this Doc View Source MessageAfter Gets the message that was updated. Declaration public KuracordMessage MessageAfter { get; } Property Value Type Description KuracordMessage | Improve this Doc View Source MessageBefore Gets the message before it got updated. This property will be null if the message was not cached. Declaration public KuracordMessage MessageBefore { get; } Property Value Type Description KuracordMessage"
  },
  "api/KSharpPlus.EventArgs.ReadyEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.ReadyEventArgs.html",
    "title": "Class ReadyEventArgs | KSharpPlus documentation",
    "keywords": "Class ReadyEventArgs Represents arguments for Ready event. Inheritance Object KuracordEventArgs ReadyEventArgs Namespace : KSharpPlus.EventArgs Assembly : KSharpPlus.dll Syntax public sealed class ReadyEventArgs : KuracordEventArgs"
  },
  "api/KSharpPlus.EventArgs.Socket.html": {
    "href": "api/KSharpPlus.EventArgs.Socket.html",
    "title": "Namespace KSharpPlus.EventArgs.Socket | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.EventArgs.Socket Classes SocketBinaryMessageEventArgs Represents arguments for binary message websocket event. SocketCloseEventArgs Represents arguments for SocketClosed event. SocketErrorEventArgs Represents arguments for SocketErrored event. SocketEventArgs Represents basic socket event arguments. SocketMessageEventArgs Represents base class for raw socket message event arguments. SocketTextMessageEventArgs Represents arguments for text message websocket event."
  },
  "api/KSharpPlus.EventArgs.Socket.SocketBinaryMessageEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Socket.SocketBinaryMessageEventArgs.html",
    "title": "Class SocketBinaryMessageEventArgs | KSharpPlus documentation",
    "keywords": "Class SocketBinaryMessageEventArgs Represents arguments for binary message websocket event. Inheritance Object SocketMessageEventArgs SocketBinaryMessageEventArgs Namespace : KSharpPlus.EventArgs.Socket Assembly : KSharpPlus.dll Syntax public sealed class SocketBinaryMessageEventArgs : SocketMessageEventArgs Constructors | Improve this Doc View Source SocketBinaryMessageEventArgs(Byte[]) Creates a new instance of binary message event arguments. Declaration public SocketBinaryMessageEventArgs(byte[] message) Parameters Type Name Description Byte [] message Received message bytes. Properties | Improve this Doc View Source Message Gets the received message bytes. Declaration public byte[] Message { get; } Property Value Type Description Byte []"
  },
  "api/KSharpPlus.EventArgs.Socket.SocketCloseEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Socket.SocketCloseEventArgs.html",
    "title": "Class SocketCloseEventArgs | KSharpPlus documentation",
    "keywords": "Class SocketCloseEventArgs Represents arguments for SocketClosed event. Inheritance Object KuracordEventArgs SocketCloseEventArgs Namespace : KSharpPlus.EventArgs.Socket Assembly : KSharpPlus.dll Syntax public class SocketCloseEventArgs : KuracordEventArgs Properties | Improve this Doc View Source CloseCode Gets the close code sent by remote host. Declaration public int CloseCode { get; } Property Value Type Description Int32 | Improve this Doc View Source CloseMessage Gets the close message sent by remote host. Declaration public string CloseMessage { get; } Property Value Type Description String"
  },
  "api/KSharpPlus.EventArgs.Socket.SocketErrorEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Socket.SocketErrorEventArgs.html",
    "title": "Class SocketErrorEventArgs | KSharpPlus documentation",
    "keywords": "Class SocketErrorEventArgs Represents arguments for SocketErrored event. Inheritance Object KuracordEventArgs SocketErrorEventArgs Namespace : KSharpPlus.EventArgs.Socket Assembly : KSharpPlus.dll Syntax public class SocketErrorEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Exception Gets the exception thrown by websocket client. Declaration public Exception Exception { get; } Property Value Type Description Exception"
  },
  "api/KSharpPlus.EventArgs.Socket.SocketEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Socket.SocketEventArgs.html",
    "title": "Class SocketEventArgs | KSharpPlus documentation",
    "keywords": "Class SocketEventArgs Represents basic socket event arguments. Inheritance Object KuracordEventArgs SocketEventArgs Namespace : KSharpPlus.EventArgs.Socket Assembly : KSharpPlus.dll Syntax public class SocketEventArgs : KuracordEventArgs"
  },
  "api/KSharpPlus.EventArgs.Socket.SocketMessageEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Socket.SocketMessageEventArgs.html",
    "title": "Class SocketMessageEventArgs | KSharpPlus documentation",
    "keywords": "Class SocketMessageEventArgs Represents base class for raw socket message event arguments. Inheritance Object SocketMessageEventArgs SocketBinaryMessageEventArgs SocketTextMessageEventArgs Namespace : KSharpPlus.EventArgs.Socket Assembly : KSharpPlus.dll Syntax public abstract class SocketMessageEventArgs : AsyncEventArgs"
  },
  "api/KSharpPlus.EventArgs.Socket.SocketTextMessageEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.Socket.SocketTextMessageEventArgs.html",
    "title": "Class SocketTextMessageEventArgs | KSharpPlus documentation",
    "keywords": "Class SocketTextMessageEventArgs Represents arguments for text message websocket event. Inheritance Object SocketMessageEventArgs SocketTextMessageEventArgs Namespace : KSharpPlus.EventArgs.Socket Assembly : KSharpPlus.dll Syntax public sealed class SocketTextMessageEventArgs : SocketMessageEventArgs Constructors | Improve this Doc View Source SocketTextMessageEventArgs(String) Creates a new instance of text message event arguments. Declaration public SocketTextMessageEventArgs(string message) Parameters Type Name Description String message Received message string. Properties | Improve this Doc View Source Message Gets the received message string. Declaration public string Message { get; } Property Value Type Description String"
  },
  "api/KSharpPlus.EventArgs.UnknownEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.UnknownEventArgs.html",
    "title": "Class UnknownEventArgs | KSharpPlus documentation",
    "keywords": "Class UnknownEventArgs Represents arguments for UnknownEvent event. Inheritance Object KuracordEventArgs UnknownEventArgs Namespace : KSharpPlus.EventArgs Assembly : KSharpPlus.dll Syntax public class UnknownEventArgs : KuracordEventArgs Properties | Improve this Doc View Source EventName Gets the event's name. Declaration public string EventName { get; } Property Value Type Description String | Improve this Doc View Source Json Gets the event's data. Declaration public string Json { get; } Property Value Type Description String"
  },
  "api/KSharpPlus.EventArgs.User.html": {
    "href": "api/KSharpPlus.EventArgs.User.html",
    "title": "Namespace KSharpPlus.EventArgs.User | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.EventArgs.User Classes UserUpdateEventArgs Represents arguments for UserUpdated event."
  },
  "api/KSharpPlus.EventArgs.User.UserUpdateEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.User.UserUpdateEventArgs.html",
    "title": "Class UserUpdateEventArgs | KSharpPlus documentation",
    "keywords": "Class UserUpdateEventArgs Represents arguments for UserUpdated event. Inheritance Object KuracordEventArgs UserUpdateEventArgs Namespace : KSharpPlus.EventArgs.User Assembly : KSharpPlus.dll Syntax public class UserUpdateEventArgs : KuracordEventArgs Properties | Improve this Doc View Source UserAfter Gets the post-update user. Declaration public KuracordUser UserAfter { get; } Property Value Type Description KuracordUser | Improve this Doc View Source UserBefore Gets the pre-update user. Declaration public KuracordUser UserBefore { get; } Property Value Type Description KuracordUser"
  },
  "api/KSharpPlus.EventArgs.ZombiedEventArgs.html": {
    "href": "api/KSharpPlus.EventArgs.ZombiedEventArgs.html",
    "title": "Class ZombiedEventArgs | KSharpPlus documentation",
    "keywords": "Class ZombiedEventArgs Represents arguments for Zombied event. Inheritance Object KuracordEventArgs ZombiedEventArgs Namespace : KSharpPlus.EventArgs Assembly : KSharpPlus.dll Syntax public class ZombiedEventArgs : KuracordEventArgs Properties | Improve this Doc View Source Failures Gets how many heartbeat failures have occured. Declaration public int Failures { get; } Property Value Type Description Int32 | Improve this Doc View Source GuildDownloadCompleted Gets whether the zombie event occured whilst guilds are downloading. Declaration public bool GuildDownloadCompleted { get; } Property Value Type Description Boolean"
  },
  "api/KSharpPlus.Exceptions.BadRequestException.html": {
    "href": "api/KSharpPlus.Exceptions.BadRequestException.html",
    "title": "Class BadRequestException | KSharpPlus documentation",
    "keywords": "Class BadRequestException Represents an exception thrown when a malformed request is sent. Inheritance Object KuracordException BadRequestException Inherited Members KuracordException.WebRequest KuracordException.WebResponse KuracordException.JsonMessage Namespace : KSharpPlus.Exceptions Assembly : KSharpPlus.dll Syntax public class BadRequestException : KuracordException Properties | Improve this Doc View Source Code Gets the error code for this exception. Declaration public int Code { get; } Property Value Type Description Int32 | Improve this Doc View Source Errors Gets the form error responses in JSON format. Declaration public string Errors { get; } Property Value Type Description String"
  },
  "api/KSharpPlus.Exceptions.html": {
    "href": "api/KSharpPlus.Exceptions.html",
    "title": "Namespace KSharpPlus.Exceptions | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Exceptions Classes BadRequestException Represents an exception thrown when a malformed request is sent. KuracordException NotFoundException Represents an exception thrown when a requested resource is not found. RequestSizeException Represents an exception thrown when the request sent to Kuracord is too large. ServerErrorException Represents an exception thrown when Kuracord returns an Internal Server Error. UnauthorizedException Represents an exception thrown when requester doesn't have necessary permissions to complete the request."
  },
  "api/KSharpPlus.Exceptions.KuracordException.html": {
    "href": "api/KSharpPlus.Exceptions.KuracordException.html",
    "title": "Class KuracordException | KSharpPlus documentation",
    "keywords": "Class KuracordException Inheritance Object KuracordException BadRequestException NotFoundException RequestSizeException ServerErrorException UnauthorizedException Namespace : KSharpPlus.Exceptions Assembly : KSharpPlus.dll Syntax public abstract class KuracordException : Exception Constructors | Improve this Doc View Source KuracordException() Declaration public KuracordException() | Improve this Doc View Source KuracordException(String) Declaration public KuracordException(string message) Parameters Type Name Description String message | Improve this Doc View Source KuracordException(String, Exception) Declaration public KuracordException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Properties | Improve this Doc View Source JsonMessage Gets the JSON message received. Declaration public string JsonMessage { get; } Property Value Type Description String | Improve this Doc View Source WebRequest Gets the request that caused the exception. Declaration public BaseRestRequest WebRequest { get; } Property Value Type Description BaseRestRequest | Improve this Doc View Source WebResponse Gets the response to the request. Declaration public RestResponse WebResponse { get; } Property Value Type Description RestResponse"
  },
  "api/KSharpPlus.Exceptions.NotFoundException.html": {
    "href": "api/KSharpPlus.Exceptions.NotFoundException.html",
    "title": "Class NotFoundException | KSharpPlus documentation",
    "keywords": "Class NotFoundException Represents an exception thrown when a requested resource is not found. Inheritance Object KuracordException NotFoundException Inherited Members KuracordException.WebRequest KuracordException.WebResponse KuracordException.JsonMessage Namespace : KSharpPlus.Exceptions Assembly : KSharpPlus.dll Syntax public class NotFoundException : KuracordException"
  },
  "api/KSharpPlus.Exceptions.RequestSizeException.html": {
    "href": "api/KSharpPlus.Exceptions.RequestSizeException.html",
    "title": "Class RequestSizeException | KSharpPlus documentation",
    "keywords": "Class RequestSizeException Represents an exception thrown when the request sent to Kuracord is too large. Inheritance Object KuracordException RequestSizeException Inherited Members KuracordException.WebRequest KuracordException.WebResponse KuracordException.JsonMessage Namespace : KSharpPlus.Exceptions Assembly : KSharpPlus.dll Syntax public class RequestSizeException : KuracordException"
  },
  "api/KSharpPlus.Exceptions.ServerErrorException.html": {
    "href": "api/KSharpPlus.Exceptions.ServerErrorException.html",
    "title": "Class ServerErrorException | KSharpPlus documentation",
    "keywords": "Class ServerErrorException Represents an exception thrown when Kuracord returns an Internal Server Error. Inheritance Object KuracordException ServerErrorException Inherited Members KuracordException.WebRequest KuracordException.WebResponse KuracordException.JsonMessage Namespace : KSharpPlus.Exceptions Assembly : KSharpPlus.dll Syntax public class ServerErrorException : KuracordException"
  },
  "api/KSharpPlus.Exceptions.UnauthorizedException.html": {
    "href": "api/KSharpPlus.Exceptions.UnauthorizedException.html",
    "title": "Class UnauthorizedException | KSharpPlus documentation",
    "keywords": "Class UnauthorizedException Represents an exception thrown when requester doesn't have necessary permissions to complete the request. Inheritance Object KuracordException UnauthorizedException Inherited Members KuracordException.WebRequest KuracordException.WebResponse KuracordException.JsonMessage Namespace : KSharpPlus.Exceptions Assembly : KSharpPlus.dll Syntax public class UnauthorizedException : KuracordException"
  },
  "api/KSharpPlus.Formatter.html": {
    "href": "api/KSharpPlus.Formatter.html",
    "title": "Class Formatter | KSharpPlus documentation",
    "keywords": "Class Formatter Inheritance Object Formatter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus Assembly : KSharpPlus.dll Syntax public static class Formatter Methods | Improve this Doc View Source BlockCode(String, String) Creates a block of code. Declaration public static string BlockCode(string content, string language = \"\") Parameters Type Name Description String content Contents of the block. String language Language to use for highlighting. Returns Type Description String Formatted block of code. | Improve this Doc View Source Bold(String) Creates bold text. Declaration public static string Bold(string content) Parameters Type Name Description String content Text to bolden. Returns Type Description String Formatted text. | Improve this Doc View Source EmbedlessUrl(Uri) Creates a URL that won't create a link preview. Declaration public static string EmbedlessUrl(Uri url) Parameters Type Name Description Uri url Url to prevent from being previewed. Returns Type Description String Formatted url. | Improve this Doc View Source InlineCode(String) Creates inline code snippet. Declaration public static string InlineCode(string content) Parameters Type Name Description String content Contents of the snippet. Returns Type Description String Formatted inline code snippet. | Improve this Doc View Source Italic(String) Creates italicized text. Declaration public static string Italic(string content) Parameters Type Name Description String content Text to italicize. Returns Type Description String Formatted text. | Improve this Doc View Source Mention(KuracordChannel) Creates a mention for specified channel. Declaration public static string Mention(KuracordChannel channel) Parameters Type Name Description KuracordChannel channel Channel to mention. Returns Type Description String Formatted mention. | Improve this Doc View Source Mention(KuracordRole) Creates a mention for specified role. Declaration public static string Mention(KuracordRole role) Parameters Type Name Description KuracordRole role Role to mention. Returns Type Description String Formatted mention. | Improve this Doc View Source Mention(KuracordUser, Boolean) Creates a mention for specified user or member. Can optionally specify to resolve nicknames. Declaration public static string Mention(KuracordUser user, bool nickname = false) Parameters Type Name Description KuracordUser user User to create mention for. Boolean nickname Whether the mention should resolve nicknames or not. Returns Type Description String Formatted mention. | Improve this Doc View Source Spoiler(String) Creates spoiler from text. Declaration public static string Spoiler(string content) Parameters Type Name Description String content Text to spoilerize. Returns Type Description String Formatted text. | Improve this Doc View Source Strike(String) Creates strikethrough text. Declaration public static string Strike(string content) Parameters Type Name Description String content Text to strikethrough. Returns Type Description String Formatted text. | Improve this Doc View Source Underline(String) Creates underlined text. Declaration public static string Underline(string content) Parameters Type Name Description String content Text to underline. Returns Type Description String Formatted text."
  },
  "api/KSharpPlus.html": {
    "href": "api/KSharpPlus.html",
    "title": "Namespace KSharpPlus | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus Classes Formatter KuracordConfiguration Represents configuration for KuracordClient . RingBuffer<T> A circular buffer collection. Utilities Various Kuracord-related utilities."
  },
  "api/KSharpPlus.KuracordConfiguration.html": {
    "href": "api/KSharpPlus.KuracordConfiguration.html",
    "title": "Class KuracordConfiguration | KSharpPlus documentation",
    "keywords": "Class KuracordConfiguration Represents configuration for KuracordClient . Inheritance Object KuracordConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus Assembly : KSharpPlus.dll Syntax public sealed class KuracordConfiguration Constructors | Improve this Doc View Source KuracordConfiguration() Creates a new configuration with default values. Declaration public KuracordConfiguration() | Improve this Doc View Source KuracordConfiguration(KuracordConfiguration) Creates a clone of another kuracord configuration. Declaration public KuracordConfiguration(KuracordConfiguration other) Parameters Type Name Description KuracordConfiguration other Client configuration to clone. Properties | Improve this Doc View Source AutoReconnect Sets whether to automatically reconnect in case a connection is lost. Defaults to true. Declaration public bool AutoReconnect { set; } Property Value Type Description Boolean | Improve this Doc View Source HttpTimeout Sets the timeout for HTTP requests. Set to InfiniteTimeSpan to disable timeouts. Defaults to 10 seconds. Declaration public TimeSpan HttpTimeout { set; } Property Value Type Description TimeSpan | Improve this Doc View Source LoggerFactory Sets the logger implementation to use. To create your own logger, implement the instance. Defaults to built-in implementation. Declaration public ILoggerFactory LoggerFactory { set; } Property Value Type Description ILoggerFactory | Improve this Doc View Source LogTimestampFormat Allows you to overwrite the time format used by the internal debug logger. Only applicable when LoggerFactory is set left at default value. Defaults to ISO 8601-like format. Declaration public string LogTimestampFormat { set; } Property Value Type Description String | Improve this Doc View Source LogUnknownEvents Whether to log unknown events or not. Defaults to true. Declaration public bool LogUnknownEvents { set; } Property Value Type Description Boolean | Improve this Doc View Source MessageCacheSize Sets the size of the global message cache. Setting this to 0 will disable message caching entirely. Defaults to 1024. Declaration public int MessageCacheSize { set; } Property Value Type Description Int32 | Improve this Doc View Source MinimumLogLevel Sets the minimum logging level for messages. Typically, the default value of Information is ok for most uses. Declaration public LogLevel MinimumLogLevel { set; } Property Value Type Description LogLevel | Improve this Doc View Source Proxy Sets the proxy to use for HTTP and WebSocket connections to Kuracord. Defaults to null. Declaration public IWebProxy Proxy { set; } Property Value Type Description IWebProxy | Improve this Doc View Source ReconnectIndefinitely Defines that the client should attempt to reconnect indefinitely. This is typically a very bad idea to set to true , as it will swallow all connection errors. Defaults to false. Declaration public bool ReconnectIndefinitely { set; } Property Value Type Description Boolean | Improve this Doc View Source Token Sets the token used to identify the client. Declaration public string Token { set; } Property Value Type Description String | Improve this Doc View Source TokenType Sets the type of the token used to identify the client. Defaults to Bot . Declaration public TokenType TokenType { set; } Property Value Type Description TokenType | Improve this Doc View Source UseRelativeRatelimit Sets whether to rely on Kuracord for NTP (Network Time Protocol) synchronization with the \"X-Ratelimit-Reset-After\" header. If the system clock is not synced, setting this to true will ensure ratelimits are synced with Kuracord and reduce the risk of hitting one. This should only be set to false if the system clock is synced with NTP. Defaults to true. Declaration public bool UseRelativeRatelimit { set; } Property Value Type Description Boolean | Improve this Doc View Source WebSocketClientFactory Sets the factory method used to create instances of WebSocket clients. Use CreateNew(IWebProxy) and equivalents on other implementations to switch out client implementations. Defaults to CreateNew(IWebProxy) . Declaration public WebSocketClientFactoryDelegate WebSocketClientFactory { set; } Property Value Type Description WebSocketClientFactoryDelegate"
  },
  "api/KSharpPlus.Logging.DefaultLogger.html": {
    "href": "api/KSharpPlus.Logging.DefaultLogger.html",
    "title": "Class DefaultLogger | KSharpPlus documentation",
    "keywords": "Class DefaultLogger Inheritance Object DefaultLogger Namespace : KSharpPlus.Logging Assembly : KSharpPlus.dll Syntax public class DefaultLogger : ILogger<BaseKuracordClient> Methods | Improve this Doc View Source BeginScope<TState>(TState) Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description IDisposable Type Parameters Name Description TState | Improve this Doc View Source IsEnabled(LogLevel) Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description LogLevel logLevel Returns Type Description Boolean | Improve this Doc View Source Log<TState>(LogLevel, EventId, TState, Nullable<Exception>, Func<TState, Nullable<Exception>, String>) Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception? exception, Func<TState, Exception?, string> formatter) Parameters Type Name Description LogLevel logLevel EventId eventId TState state Nullable < Exception > exception Func <TState, Nullable < Exception >, String > formatter Type Parameters Name Description TState"
  },
  "api/KSharpPlus.Logging.html": {
    "href": "api/KSharpPlus.Logging.html",
    "title": "Namespace KSharpPlus.Logging | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Logging Classes DefaultLogger LoggerEvents Contains well-defined event IDs used by core of KSharpPlus."
  },
  "api/KSharpPlus.Logging.LoggerEvents.html": {
    "href": "api/KSharpPlus.Logging.LoggerEvents.html",
    "title": "Class LoggerEvents | KSharpPlus documentation",
    "keywords": "Class LoggerEvents Contains well-defined event IDs used by core of KSharpPlus. Inheritance Object LoggerEvents Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Logging Assembly : KSharpPlus.dll Syntax public static class LoggerEvents Properties | Improve this Doc View Source AuditLog Events pertaining to audit log processing. Declaration public static EventId AuditLog { get; } Property Value Type Description EventId | Improve this Doc View Source ConnectionClose Events pertaining to clean connection closes. Declaration public static EventId ConnectionClose { get; } Property Value Type Description EventId | Improve this Doc View Source ConnectionFailure Events typically emitted whenever WebSocket connections fail or are terminated. Declaration public static EventId ConnectionFailure { get; } Property Value Type Description EventId | Improve this Doc View Source EventHandlerException Events emitted when exceptions are thrown in handlers attached to async events. Declaration public static EventId EventHandlerException { get; } Property Value Type Description EventId | Improve this Doc View Source GatewayWsRx Events containing raw (but decompressed) payloads, received from Kuracord Gateway. Declaration public static EventId GatewayWsRx { get; } Property Value Type Description EventId | Improve this Doc View Source GatewayWsTx Events containing raw payloads, as they're being sent to Kuracord Gateway. Declaration public static EventId GatewayWsTx { get; } Property Value Type Description EventId | Improve this Doc View Source Heartbeat Events pertaining to connection lifecycle, specifically, heartbeats. Declaration public static EventId Heartbeat { get; } Property Value Type Description EventId | Improve this Doc View Source HeartbeatFailure Events pertaining to various heartbeat failures, typically fatal. Declaration public static EventId HeartbeatFailure { get; } Property Value Type Description EventId | Improve this Doc View Source Intents Events pertaining to Gateway Intents. Typically diagnostic information. Declaration public static EventId Intents { get; } Property Value Type Description EventId | Improve this Doc View Source Misc Miscellaneous events, that do not fit in any other category. Declaration public static EventId Misc { get; } Property Value Type Description EventId | Improve this Doc View Source RatelimitDiag Events pertaining to ratelimit diagnostics. Typically contain raw bucket info. Declaration public static EventId RatelimitDiag { get; } Property Value Type Description EventId | Improve this Doc View Source RatelimitHit Events pertaining to ratelimit exhaustion. Declaration public static EventId RatelimitHit { get; } Property Value Type Description EventId | Improve this Doc View Source RatelimitPreemptive Events emitted when a ratelimit is exhausted and a request is preemptively blocked. Declaration public static EventId RatelimitPreemptive { get; } Property Value Type Description EventId | Improve this Doc View Source RestCleaner Declaration public static EventId RestCleaner { get; } Property Value Type Description EventId | Improve this Doc View Source RestError Events emitted when REST processing fails for any reason. Declaration public static EventId RestError { get; } Property Value Type Description EventId | Improve this Doc View Source RestHashMover Declaration public static EventId RestHashMover { get; } Property Value Type Description EventId | Improve this Doc View Source RestRx Events containing raw payloads, as they're received from Kuracord's REST API. Declaration public static EventId RestRx { get; } Property Value Type Description EventId | Improve this Doc View Source RestTx Events containing raw payloads, as they're sent to Kuracord's REST API. Declaration public static EventId RestTx { get; } Property Value Type Description EventId | Improve this Doc View Source SessionUpdate Events pertaining to Kuracord-issued session state updates. Declaration public static EventId SessionUpdate { get; } Property Value Type Description EventId | Improve this Doc View Source Startup Events pertaining to startup tasks. Declaration public static EventId Startup { get; } Property Value Type Description EventId | Improve this Doc View Source WebSocketReceive Events emitted for various high-level WebSocket receive events. Declaration public static EventId WebSocketReceive { get; } Property Value Type Description EventId | Improve this Doc View Source WebSocketReceiveFailure Events emitted for various WebSocket payload processing failures, typically when deserialization or decoding fails. Declaration public static EventId WebSocketReceiveFailure { get; } Property Value Type Description EventId | Improve this Doc View Source WebSocketReceiveRaw Events emitted for various low-level WebSocket receive events. Declaration public static EventId WebSocketReceiveRaw { get; } Property Value Type Description EventId | Improve this Doc View Source WebSocketSendRaw Events emitted for various low-level WebSocket send events. Declaration public static EventId WebSocketSendRaw { get; } Property Value Type Description EventId"
  },
  "api/KSharpPlus.Net.Abstractions.Gateway.GatewayOpCode.html": {
    "href": "api/KSharpPlus.Net.Abstractions.Gateway.GatewayOpCode.html",
    "title": "Enum GatewayOpCode | KSharpPlus documentation",
    "keywords": "Enum GatewayOpCode Specifies an OP code in a gateway payload. Namespace : KSharpPlus.Net.Abstractions.Gateway Assembly : KSharpPlus.dll Syntax public enum GatewayOpCode Fields Name Description Dispatch Used for dispatching events. Heartbeat Used for pinging the gateway to ensure the connection is still alive. HeartbeatAck Used to acknowledge a heartbeat. Hello Used by the gateway upon connecting. Identify Used for initial handshake with the gateway. Ready Used when identify is successful Resume Used to resume a closed connection."
  },
  "api/KSharpPlus.Net.Abstractions.Gateway.html": {
    "href": "api/KSharpPlus.Net.Abstractions.Gateway.html",
    "title": "Namespace KSharpPlus.Net.Abstractions.Gateway | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Net.Abstractions.Gateway Enums GatewayOpCode Specifies an OP code in a gateway payload."
  },
  "api/KSharpPlus.Net.Rest.BaseRestRequest.html": {
    "href": "api/KSharpPlus.Net.Rest.BaseRestRequest.html",
    "title": "Class BaseRestRequest | KSharpPlus documentation",
    "keywords": "Class BaseRestRequest Represents a request sent over HTTP. Inheritance Object BaseRestRequest RestRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Net.Rest Assembly : KSharpPlus.dll Syntax public abstract class BaseRestRequest Properties | Improve this Doc View Source Headers Gets the headers sent with this request. Declaration public IReadOnlyDictionary<string, string> Headers { get; } Property Value Type Description IReadOnlyDictionary < String , String > | Improve this Doc View Source Kuracord Declaration protected BaseKuracordClient Kuracord { get; } Property Value Type Description BaseKuracordClient | Improve this Doc View Source Method Gets the HTTP method used for this request. Declaration public RestRequestMethod Method { get; } Property Value Type Description RestRequestMethod | Improve this Doc View Source RequestTaskSource Declaration protected TaskCompletionSource<RestResponse> RequestTaskSource { get; } Property Value Type Description TaskCompletionSource < RestResponse > | Improve this Doc View Source Url Gets the url to which this request is going to be made. Declaration public Uri Url { get; } Property Value Type Description Uri Methods | Improve this Doc View Source SetCompleted(RestResponse) Declaration protected void SetCompleted(RestResponse response) Parameters Type Name Description RestResponse response | Improve this Doc View Source SetFaulted(Exception) Declaration protected void SetFaulted(Exception ex) Parameters Type Name Description Exception ex | Improve this Doc View Source TrySetFaulted(Exception) Declaration protected bool TrySetFaulted(Exception ex) Parameters Type Name Description Exception ex Returns Type Description Boolean | Improve this Doc View Source WaitForCompletionAsync() Asynchronously waits for this request to complete. Declaration public Task<RestResponse> WaitForCompletionAsync() Returns Type Description Task < RestResponse > HTTP response to this request."
  },
  "api/KSharpPlus.Net.Rest.html": {
    "href": "api/KSharpPlus.Net.Rest.html",
    "title": "Namespace KSharpPlus.Net.Rest | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Net.Rest Classes BaseRestRequest Represents a request sent over HTTP. KuracordApiClient RestRequest Represents a non-multipart HTTP request. RestResponse Represents a response sent by the remote HTTP party. Enums RestRequestMethod Defines the HTTP method to use for an HTTP request."
  },
  "api/KSharpPlus.Net.Rest.KuracordApiClient.html": {
    "href": "api/KSharpPlus.Net.Rest.KuracordApiClient.html",
    "title": "Class KuracordApiClient | KSharpPlus documentation",
    "keywords": "Class KuracordApiClient Inheritance Object KuracordApiClient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Net.Rest Assembly : KSharpPlus.dll Syntax public sealed class KuracordApiClient"
  },
  "api/KSharpPlus.Net.Rest.RestRequest.html": {
    "href": "api/KSharpPlus.Net.Rest.RestRequest.html",
    "title": "Class RestRequest | KSharpPlus documentation",
    "keywords": "Class RestRequest Represents a non-multipart HTTP request. Inheritance Object BaseRestRequest RestRequest Inherited Members BaseRestRequest.Kuracord BaseRestRequest.RequestTaskSource BaseRestRequest.Url BaseRestRequest.Method BaseRestRequest.Headers BaseRestRequest.WaitForCompletionAsync() BaseRestRequest.SetCompleted(RestResponse) BaseRestRequest.SetFaulted(Exception) BaseRestRequest.TrySetFaulted(Exception) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Net.Rest Assembly : KSharpPlus.dll Syntax public class RestRequest : BaseRestRequest Properties | Improve this Doc View Source Payload Gets the payload sent with this request. Declaration public string Payload { get; } Property Value Type Description String"
  },
  "api/KSharpPlus.Net.Rest.RestRequestMethod.html": {
    "href": "api/KSharpPlus.Net.Rest.RestRequestMethod.html",
    "title": "Enum RestRequestMethod | KSharpPlus documentation",
    "keywords": "Enum RestRequestMethod Defines the HTTP method to use for an HTTP request. Namespace : KSharpPlus.Net.Rest Assembly : KSharpPlus.dll Syntax public enum RestRequestMethod Fields Name Description DELETE Defines that the request is a DELETE request. GET Defines that the request is a GET request. HEAD Defines that the request is a HEAD request. PATCH Defines that the request is a PATCH request. POST Defines that the request is a POST request. PUT Defines that the request is a PUT request."
  },
  "api/KSharpPlus.Net.Rest.RestResponse.html": {
    "href": "api/KSharpPlus.Net.Rest.RestResponse.html",
    "title": "Class RestResponse | KSharpPlus documentation",
    "keywords": "Class RestResponse Represents a response sent by the remote HTTP party. Inheritance Object RestResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Net.Rest Assembly : KSharpPlus.dll Syntax public sealed class RestResponse Properties | Improve this Doc View Source Headers Gets the headers sent by the remote party. Declaration public IReadOnlyDictionary<string, string>? Headers { get; } Property Value Type Description Nullable < IReadOnlyDictionary < String , String >> | Improve this Doc View Source Response Gets the contents of the response sent by the remote party. Declaration public string Response { get; } Property Value Type Description String | Improve this Doc View Source ResponseCode Gets the response code sent by the remote party. Declaration public int ResponseCode { get; } Property Value Type Description Int32"
  },
  "api/KSharpPlus.Net.Serialization.html": {
    "href": "api/KSharpPlus.Net.Serialization.html",
    "title": "Namespace KSharpPlus.Net.Serialization | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Net.Serialization Classes KuracordJson"
  },
  "api/KSharpPlus.Net.Serialization.KuracordJson.html": {
    "href": "api/KSharpPlus.Net.Serialization.KuracordJson.html",
    "title": "Class KuracordJson | KSharpPlus documentation",
    "keywords": "Class KuracordJson Inheritance Object KuracordJson Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Net.Serialization Assembly : KSharpPlus.dll Syntax public static class KuracordJson Methods | Improve this Doc View Source PopulateObject(JToken, Object) Populates an object with the values from a JSON node. Declaration public static void PopulateObject(JToken value, object target) Parameters Type Name Description JToken value The token to populate the object with. Object target The object to populate. | Improve this Doc View Source SerializeObject(Object) Serializes the specified object to a JSON string. Declaration public static string SerializeObject(object value) Parameters Type Name Description Object value The object to serialize. Returns Type Description String A JSON string representation of the object. | Improve this Doc View Source ToKuracordObject<T>(JToken) Converts this token into an object, passing any properties through extra s if needed. Declaration public static T ToKuracordObject<T>(this JToken token) Parameters Type Name Description JToken token The token to convert Returns Type Description T The converted token Type Parameters Name Description T Type to convert to"
  },
  "api/KSharpPlus.Net.WebSocket.html": {
    "href": "api/KSharpPlus.Net.WebSocket.html",
    "title": "Namespace KSharpPlus.Net.WebSocket | KSharpPlus documentation",
    "keywords": "Namespace KSharpPlus.Net.WebSocket Classes WebSocketClient Interfaces IWebSocketClient Delegates WebSocketClientFactoryDelegate Creates an instance of a WebSocket client implementation."
  },
  "api/KSharpPlus.Net.WebSocket.IWebSocketClient.html": {
    "href": "api/KSharpPlus.Net.WebSocket.IWebSocketClient.html",
    "title": "Interface IWebSocketClient | KSharpPlus documentation",
    "keywords": "Interface IWebSocketClient Namespace : KSharpPlus.Net.WebSocket Assembly : KSharpPlus.dll Syntax public interface IWebSocketClient Properties | Improve this Doc View Source DefaultHeaders Gets the collection of default headers to send when connecting to the remote endpoint. Declaration IReadOnlyDictionary<string, string> DefaultHeaders { get; } Property Value Type Description IReadOnlyDictionary < String , String > | Improve this Doc View Source Proxy Gets the proxy settings for this client. Declaration IWebProxy Proxy { get; } Property Value Type Description IWebProxy Methods | Improve this Doc View Source AddDefaultHeader(String, String) Adds a header to the default header collection. Declaration bool AddDefaultHeader(string name, string value) Parameters Type Name Description String name Name of the header to add. String value Value of the header to add. Returns Type Description Boolean Whether the operation succeeded. | Improve this Doc View Source ConnectAsync(Uri) Connects to a specified remote WebSocket endpoint. Declaration Task ConnectAsync(Uri uri) Parameters Type Name Description Uri uri The URI of the WebSocket endpoint. Returns Type Description Task | Improve this Doc View Source DisconnectAsync(Int32, String) Disconnects the WebSocket connection. Declaration Task DisconnectAsync(int code = 1000, string message = \"\") Parameters Type Name Description Int32 code String message Returns Type Description Task | Improve this Doc View Source RemoveDefaultHeader(String) Removes a header from the default header collection. Declaration bool RemoveDefaultHeader(string name) Parameters Type Name Description String name Name of the header to remove. Returns Type Description Boolean Whether the operation succeeded. | Improve this Doc View Source SendMessageAsync(String) Send a message to the WebSocket server. Declaration Task SendMessageAsync(string message) Parameters Type Name Description String message The message to send. Returns Type Description Task Events | Improve this Doc View Source Connected Triggered when the client connects successfully. Declaration event AsyncEventHandler<IWebSocketClient, SocketEventArgs> Connected Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketEventArgs > | Improve this Doc View Source Disconnected Triggered when the client is disconnected. Declaration event AsyncEventHandler<IWebSocketClient, SocketCloseEventArgs> Disconnected Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketCloseEventArgs > | Improve this Doc View Source ExceptionThrown Triggered when an error occurs in the client. Declaration event AsyncEventHandler<IWebSocketClient, SocketErrorEventArgs> ExceptionThrown Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketErrorEventArgs > | Improve this Doc View Source MessageReceived Triggered when the client receives a message from the remote party. Declaration event AsyncEventHandler<IWebSocketClient, SocketMessageEventArgs> MessageReceived Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketMessageEventArgs >"
  },
  "api/KSharpPlus.Net.WebSocket.WebSocketClient.html": {
    "href": "api/KSharpPlus.Net.WebSocket.WebSocketClient.html",
    "title": "Class WebSocketClient | KSharpPlus documentation",
    "keywords": "Class WebSocketClient Inheritance Object WebSocketClient Implements IWebSocketClient IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus.Net.WebSocket Assembly : KSharpPlus.dll Syntax public class WebSocketClient : IWebSocketClient Properties | Improve this Doc View Source DefaultHeaders Declaration public IReadOnlyDictionary<string, string> DefaultHeaders { get; } Property Value Type Description IReadOnlyDictionary < String , String > | Improve this Doc View Source Proxy Declaration public IWebProxy Proxy { get; } Property Value Type Description IWebProxy Methods | Improve this Doc View Source AddDefaultHeader(String, String) Declaration public bool AddDefaultHeader(string name, string value) Parameters Type Name Description String name String value Returns Type Description Boolean | Improve this Doc View Source ConnectAsync(Uri) Declaration public async Task ConnectAsync(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Task | Improve this Doc View Source CreateNew(IWebProxy) Creates a new instance of WebSocketClient . Declaration public static IWebSocketClient CreateNew(IWebProxy proxy) Parameters Type Name Description IWebProxy proxy Proxy to use for this client instance. Returns Type Description IWebSocketClient An instance of WebSocketClient . | Improve this Doc View Source DisconnectAsync(Int32, String) Declaration public async Task DisconnectAsync(int code = 1000, string message = \"\") Parameters Type Name Description Int32 code String message Returns Type Description Task | Improve this Doc View Source Dispose() Disposes of resources used by this WebSocket client instance. Declaration public void Dispose() | Improve this Doc View Source RemoveDefaultHeader(String) Declaration public bool RemoveDefaultHeader(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source SendMessageAsync(String) Declaration public async Task SendMessageAsync(string message) Parameters Type Name Description String message Returns Type Description Task Events | Improve this Doc View Source Connected Triggered when the client connects successfully. Declaration public event AsyncEventHandler<IWebSocketClient, SocketEventArgs> Connected Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketEventArgs > | Improve this Doc View Source Disconnected Triggered when the client is disconnected. Declaration public event AsyncEventHandler<IWebSocketClient, SocketCloseEventArgs> Disconnected Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketCloseEventArgs > | Improve this Doc View Source ExceptionThrown Triggered when an error occurs in the client. Declaration public event AsyncEventHandler<IWebSocketClient, SocketErrorEventArgs> ExceptionThrown Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketErrorEventArgs > | Improve this Doc View Source MessageReceived Triggered when the client receives a message from the remote party. Declaration public event AsyncEventHandler<IWebSocketClient, SocketMessageEventArgs> MessageReceived Event Type Type Description AsyncEventHandler < IWebSocketClient , SocketMessageEventArgs > Implements IWebSocketClient IDisposable"
  },
  "api/KSharpPlus.Net.WebSocket.WebSocketClientFactoryDelegate.html": {
    "href": "api/KSharpPlus.Net.WebSocket.WebSocketClientFactoryDelegate.html",
    "title": "Delegate WebSocketClientFactoryDelegate | KSharpPlus documentation",
    "keywords": "Delegate WebSocketClientFactoryDelegate Creates an instance of a WebSocket client implementation. Namespace : KSharpPlus.Net.WebSocket Assembly : KSharpPlus.dll Syntax public delegate IWebSocketClient WebSocketClientFactoryDelegate(IWebProxy proxy); Parameters Type Name Description IWebProxy proxy Proxy settings to use for the new WebSocket client instance. Returns Type Description IWebSocketClient Constructed WebSocket client implementation."
  },
  "api/KSharpPlus.RingBuffer-1.html": {
    "href": "api/KSharpPlus.RingBuffer-1.html",
    "title": "Class RingBuffer<T> | KSharpPlus documentation",
    "keywords": "Class RingBuffer<T> A circular buffer collection. Inheritance Object RingBuffer<T> Implements System.Collections.ICollection <T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus Assembly : KSharpPlus.dll Syntax public class RingBuffer<T> Type Parameters Name Description T Type of elements within this ring buffer. Constructors | Improve this Doc View Source RingBuffer(Int32) Creates a new ring buffer with specified size. Declaration public RingBuffer(int size) Parameters Type Name Description Int32 size Size of the buffer to create. Properties | Improve this Doc View Source Capacity Gets the capacity of this ring buffer. Declaration public int Capacity { get; protected set; } Property Value Type Description Int32 | Improve this Doc View Source Count Gets the number of items in this ring buffer. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source CurrentIndex Gets the current index of the buffer items. Declaration public int CurrentIndex { get; protected set; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Gets whether this ring buffer is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Add(T) Inserts an item into this ring buffer. Declaration public void Add(T item) Parameters Type Name Description T item Item to insert. | Improve this Doc View Source Clear() Clears this ring buffer and resets the current item index. Declaration public void Clear() | Improve this Doc View Source Contains(T) Checks whether given item is present in the buffer. This method is not implemented. Use Contains(Func<T, Boolean>) instead. Declaration public bool Contains(T item) Parameters Type Name Description T item Item to check for. Returns Type Description Boolean Whether the buffer contains the item. | Improve this Doc View Source Contains(Func<T, Boolean>) Checks whether given item is present in the buffer using given predicate to find it. Declaration public bool Contains(Func<T, bool> predicate) Parameters Type Name Description Func <T, Boolean > predicate Predicate used to check for the item. Returns Type Description Boolean Whether the buffer contains the item. | Improve this Doc View Source CopyTo(T[], Int32) Copies this ring buffer to target array, attempting to maintain the order of items within. Declaration public void CopyTo(T[] array, int index) Parameters Type Name Description T[] array Target array. Int32 index Index starting at which to copy the items to. | Improve this Doc View Source GetEnumerator() Returns an enumerator for this ring buffer. Declaration public IEnumerator<T> GetEnumerator() Returns Type Description System.Collections.IEnumerator <T> Enumerator for this ring buffer. | Improve this Doc View Source Remove(T) Removes an item from the buffer. This method is not implemented. Use Remove(Func<T, Boolean>) instead. Declaration public bool Remove(T item) Parameters Type Name Description T item Item to remove. Returns Type Description Boolean Whether an item was removed or not. | Improve this Doc View Source Remove(Func<T, Boolean>) Removes an item from the buffer using given predicate to find it. Declaration public bool Remove(Func<T, bool> predicate) Parameters Type Name Description Func <T, Boolean > predicate Predicate used to find the item. Returns Type Description Boolean Whether an item was removed or not. | Improve this Doc View Source TryGet(Func<T, Boolean>, out T) Gets first item from the buffer that matches the predicate. Declaration public bool TryGet(Func<T, bool> predicate, out T item) Parameters Type Name Description Func <T, Boolean > predicate Predicate used to find the item. T item Item that matches the predicate, or default value for the type of the items in this ring buffer, if one is not found. Returns Type Description Boolean Whether an item that matches the predicate was found or not. Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Returns an enumerator for this ring buffer. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Enumerator for this ring buffer. Implements System.Collections.ICollection<>"
  },
  "api/KSharpPlus.Utilities.html": {
    "href": "api/KSharpPlus.Utilities.html",
    "title": "Class Utilities | KSharpPlus documentation",
    "keywords": "Class Utilities Various Kuracord-related utilities. Inheritance Object Utilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : KSharpPlus Assembly : KSharpPlus.dll Syntax public static class Utilities Methods | Improve this Doc View Source Replace<T>(List<T>, Predicate<T>, T) Declaration public static List<T> Replace<T>(this List<T> source, Predicate<T> predicate, T newValue) Parameters Type Name Description List <T> source Predicate <T> predicate T newValue Returns Type Description List <T> Type Parameters Name Description T"
  },
  "articles/basics/bot_account.html": {
    "href": "articles/basics/bot_account.html",
    "title": "Creating a Bot Account | KSharpPlus documentation",
    "keywords": "Creating a Bot Account Applications currently not supported in Kuracord, so we will use user account to interact with API. Register an User Account Before you're able to interact with the Kuracord API, you'll need to create a new user account. Go to the Kuracord register page and register a new account. Get Account Token Instead of logging in to Kuracord with a username and password, bot accounts use a string called a token to authenticate. You'll want to retrieve the token for your bot account so you can use it with KSharpPlus. Go to the API docs page , open \" POST /users/login \" section, enter your email and password you used to register the account and click on \"Execute\" button to get your account token in JSON format. Go ahead and copy your bot token and save it somewhere. You'll be using it soon! Important Handle your bot token with care! Anyone who has your token will have access to your bot account. Be sure to store it in a secure location and never give it to anybody . You will NOT be able to recover your token! Write Some Code You've got a bot account set up and a token ready for use. Sounds like it's time for you to write your first bot !"
  },
  "articles/basics/first_bot.html": {
    "href": "articles/basics/first_bot.html",
    "title": "Your First Bot | KSharpPlus documentation",
    "keywords": "Your First Bot Note This article assumes the following: You have created a bot account and have a token. You have JetBrains Rider or another IDE installed on your computer. Create a Project Open up Rider and click on New Solution at the top of the window. Select .NET / .NET Core > Console Application Next, you'll give your project a name. For this example, we'll name it MyFirstBot . If you'd like, you can also change the directory that your project will be created in. Enter your desired project name, then click on the Create button. Install Package Now that you have a project created, you'll want to get KSharpPlus installed. Locate the Explorer towards the upper left, then right click on Dependencies and select Manage NuGet Packages from the context menu. You'll then be greeted by the NuGet package manager. Select the Packages tab, then type KSharpPlus into the search text box. The first result should be the KSharpPlus package. Package Description KSharpPlus Main package; Kuracord API client. We'll only need the KSharpPlus package for the basic bot we'll be writing in this article. Select it from the list then click the Install button to the right (after verifing that you will be installing the latest version ). You're now ready to write some code! First Lines of Code KSharpPlus implements Task-based Asynchronous Pattern . Because of this, the majority of KSharpPlus methods must be executed in a method marked as async so they can be properly await ed. Head back to your Program.cs tab and delete all in it. Then add the Main method: namespace MyFirstBot; internal static class Program { public static async Task Main() { } } We'll now create a new KuracordClient instance in our brand new asynchronous method. Create a new variable and assign it a new KuracordClient instance, then pass an instance of KuracordConfiguration to its constructor. Create an object initializer for KuracordConfiguration and populate the Token property with your token, then set the TokenType property to User . KuracordClient client = new(new KuracordConfiguration { Token = \"My First Token\", TokenType = TokenType.User }); Warning We hard-code the token in the above snippet to keep things simple and easy to understand. Hard-coding your token is not a smart idea, especially if you plan on distributing your source code. Instead you should store your token in an external medium, such as a configuration file or environment variable, and read that into your program to be used with KSharpPlus. Follow that up with ConnectAsync to connect and login to Kuracord, and await Task.Delay(-1); at the end of the method to prevent the console window from closing prematurely. KuracordClient client = new(); await client.ConnectAsync(); await Task.Delay(-1); ReSharper will have auto generated the needed using directive for you if you typed this in by hand. If you've copied the snippet, be sure to apply the recommended suggestion to insert the required directive. If you hit F5 on your keyboard to compile and run your program, you'll be greeted by a happy little console with a single log message from KSharpPlus. Woo hoo! Spicing Up Your Bot Right now our bot doesn't do a whole lot. It's not even on any server! Let's bring it to life by adding it to the server and having it respond to a message! Login to your Kuracord account and select the server you want to invite your bot to. Then open any channel and copy Vanity URL for your server. Hook the Ready event fired by KuracordClient with a lambda . Mark it as async and give it two parameters: s and e . Then, add an if statement into the body of your event lambda that will check is the bot is in any server: client.Ready += async (s, e) => { if (client.Guilds.Count > 0) return; }; Cool! Next we'll add an JoinGuildAsync method and pass Vanity URL as parameters to it. Also we'll add an confirmation message output to the console. client.Ready += async (s, e) => { if (client.Guilds.Count > 0) return; KuracordGuild guild = await client.JoinGuildAsync(\"My First Invite\"); Console.WriteLine($\"I joined the {guild.Name}!\"); }; Now we need to add some functionality to the bot. Subscribe to the MessageCreated event as before. client.MessageCreated += async (s, e) => { }; Add an if statement that will check if Content starts with your desired trigger word and respond with a message using SendMessageAsync if it does. For this example, we'll have the bot to respond with pong! for each message that starts with ping . client.MessageCreated += async (s, e) => { if (e.Message.Content.ToLower().StartsWith(\"ping\")) await e.Channel.SendMessageAsync(\"pong!\"); }; The Finished Product Your entire program should now look like this: using KSharpPlus; using KSharpPlus.Clients; using KSharpPlus.Entities.Guild; using KSharpPlus.Enums; namespace MyFirstBot; internal static class Program { public static async Task Main() { KuracordClient client = new(new KuracordConfiguration { Token = \"My First Token\", TokenType = TokenType.User }); client.Ready += async (s, e) => { if (client.Guilds.Count > 0) return; KuracordGuild guild = await client.JoinGuildAsync(\"My First Invite\"); Console.WriteLine($\"I joined the {guild.Name}!\"); }; client.MessageCreated += async (s, e) => { if (e.Message.Content.ToLower().StartsWith(\"ping\")) await e.Channel.SendMessageAsync(\"pong!\"); }; await client.ConnectAsync(); await Task.Delay(-1); } } Hit F5 to run your bot, then send ping in any channel your bot account has access to. Your bot should respond with pong! for each ping you send. Congrats, your bot now does something! Further Reading Now that you have a basic bot up and running, you should take a look at the following: Events"
  },
  "articles/beyond_basics/events.html": {
    "href": "articles/beyond_basics/events.html",
    "title": "KSharpPlus Events | KSharpPlus documentation",
    "keywords": "Consuming Events KSharpPlus makes use of asynchronous events which will execute each handler asynchronously in sequential order. This event system will require event handlers have a Task return type and take two parameters. The first parameter will contain an instance of the KuracordClient which fired the event. The second parameter will contain an arguments object for the specific event you're handling. Below is a snippet demonstrating this with a lambda expression. public static async Task Main() { KuracordClient client = new(); client.MessageCreated += async (s, e) => { if (e.Message.Content.ToLower().Contains(\"spiderman\")) await e.Channel.SendMessageAsync(\"I want pictures of Spiderman!\"); }; client.MemberJoined += (s, e) => { // Non asynchronous code here. return Task.CompletedTask; }; } Alternatively, you can create a new method to consume an event. public static async Task Main() { KuracordClient client = new(); client.MessageCreated += MessageCreatedHandler; client.MemberJoined += MemberJoinedHandler; } async Task MessageCreatedHandler(KuracordClient s, MessageCreateEventArgs e) { if (e.Guild.Id == 564 && e.Author.Id == 42) await e.Message.DeleteAsync(); } Task MemberJoinedHandler(KuracordClient s, MemberJoinedEventArgs e) { // Non asynchronous code here. return Task.CompletedTask; } Avoiding Deadlocks Despite the fact that your event handlers are executed asynchronously, they are also executed one at a time on the gateway thread for consistency. This means that each handler must complete its execution before others can be dispatched. Because of this, executing code in your event handlers that runs for an extended period of time may inadvertently create brief unresponsiveness or, even worse, cause a deadlock . To prevent such issues, any event handler that has the potential to take more than 2 seconds to execute should have its logic offloaded to a Task.Run . client.MessageCreated += (s, e) => { _ = Task.Run(async () => { // Pretend this takes many, many seconds to execute. SlowWebServiceResponse response = await QuerySlowWebServiceAsync(e.Message.Content); if (response.StatusCode == HttpStatusCode.OK) await e.Member.ModifyAsync(\"Cool nickname\"); }); return Task.CompletedTask; }; Doing this will allow the handler to complete its execution quicker, which will in turn allow other handlers to be executed and prevent the gateway thread from being blocked."
  },
  "articles/beyond_basics/logging/default.html": {
    "href": "articles/beyond_basics/logging/default.html",
    "title": "The Default Logger | KSharpPlus documentation",
    "keywords": "The Default Logger KSharpPlus ships with a default logging implementation which is enabled automatically with no setup required . This is a basic implementation that only sends log messages to the console. Minimum Logging Level You're able to adjust the verbosity of log messages via KuracordConfiguration . new KuracordConfiguration { MinimumLogLevel = LogLevel.Debug }; The example above will display level log messages that are higher than or equal to Debug . Timestamp Format You're also able to change the format of the log timestamp; this is also set through KuracordConfiguration . new KuracordConfiguration { LogTimestampFormat = \"MMM dd yyyy - hh:mm:ss tt\" }; For a list of all available format specifiers, check out the MSDN page for custom date and time format strings . Log Levels Below is a table of all log levels and the kind of messages you can expect from each. Name Position Description Critical 5 Fatal error which may require a restart. Error 4 A failure of an operation or request. Warning 3 Non-fatal errors and abnormalities. Information 2 Session startup and resume messages. Debug 1 Related information. Trace 0 Websocket & REST traffic. Warning The Trace log level is not recommended for use in production. It is intended for debugging KSharpPlus and may display tokens and other sensitive data."
  },
  "articles/beyond_basics/logging/third_party.html": {
    "href": "articles/beyond_basics/logging/third_party.html",
    "title": "Third Party Logging | KSharpPlus documentation",
    "keywords": "Using a Third Party Logger While the default logging implementation will meet the needs of most, some may desire to make use of a more robust implementation which provides more features. Thankfully, KSharpPlus allows you to use any logging library which has an implementation for the logging abstractions provided by Microsoft. Serilog , one of the more popular logging libraries, will be used to demonstrate. This will simply be a brief demo, so we won't go into the configuration of Serilog. You'll want to head on over to their wiki page to learn about that! We'll need to install both the Serilog and Serilog.Extensions.Logging packages from NuGet, along with at least one of the many available sinks . Our example here will only use the Serilog.Sinks.Console sink. Start off by creating a new LoggerConfiguration instance, slap .WriteTo.Console().CreateLogger() onto the end of it, then directly assign that to the static Logger property on the Log class. Log.Logger = new LoggerConfiguration() .WriteTo.Console() .CreateLogger(); This will make a new Serilog logger instance which will write to the console sink. Next, create a new variable and assign it a new LoggerFactory instance which calls AddSerilog() . ILoggerFactory logFactory = new LoggerFactory().AddSerilog(); Then assign that variable to the LoggerFactory property of your KuracordConfiguration . new KuracordConfiguration { LoggerFactory = logFactory } Altogether, you'll have something similar to this: using KSharpPlus; using KSharpPlus.Clients; using Microsoft.Extensions.Logging; using Serilog; public static async Task Main() { Log.Logger = new LoggerConfiguration() .WriteTo.Console() .CreateLogger(); ILoggerFactory logFactory = new LoggerFactory().AddSerilog(); KuracordClient client = new(new KuracordConfiguration { LoggerFactory = logFactory }); } And that's it! If you now run your bot, you'll see KSharpPlus log messages formatted and displayed by Serilog."
  },
  "articles/misc/reporting_issues.html": {
    "href": "articles/misc/reporting_issues.html",
    "title": "Reporting Issues | KSharpPlus documentation",
    "keywords": "I broke something, and I need it fixed! We always try to fix bugs, and make sure that when we release the next version of KSharpPlus, everything is polished and working. However, KSharpPlus is not a small codebase, and we can't always catch all the bugs, or notice all the regressions that happen while we fix bugs or implement new issues. GitHub issue tracker If you find a bug, come up with a new idea, or just want to report something, you can open an issue on our GitHub Issue Tracker . When opening an issue, make sure to include as much detail as possible. If at all possible, please include: Steps to reproduce the issue What were you trying to achieve Expected/acutal result Stack traces, exception types, messages Attempted solutions Discord Some questions, most notably questions on using the library, are better asked on Discord. You can find the server links on the preamble . Contributing Lastly, while we understand that not everyone is an expert programmer, we would appreciate it if you could fix any issues you find and submit a Pull Request on GitHub. This would reduce the amount of work we would have to do. When contributing, ensure your code matches the style of the rest of the library, and that you test the changes you make, and catch any possible regressions."
  },
  "articles/preamble.html": {
    "href": "articles/preamble.html",
    "title": "Preamble | KSharpPlus documentation",
    "keywords": "Supported .NET Implementations There are only a one version we will explicitly provide support for. Implementation Support Notes .NET Core ✔️ Version 7.0 are supported. If you use an unsupported implementation and encounter issues, you'll be on your own. Getting Started If you're writing a Kuracord bot for the first time, you'll want to start with creating a bot account . Otherwise, if you have a bot account already, start off with the writing your first bot article. Once you're up and running, feel free to browse through the API Documentation ! Support and Questions You can get in contact with us:"
  },
  "index.html": {
    "href": "index.html",
    "title": "KSharpPlus Documentation | KSharpPlus documentation",
    "keywords": "KSharpPlus Documentation KSharpPlus (K#+) is an official .NET wrapper for the Kuracord API, based off DSharpPlus , but rewritten for Kuracord. Getting Started New users will want to take a look through the articles for quick start guides, tutorials, and examples of use. Once you've gotten through the articles, head on over to the API Documentation for all classes and methods provided by this library. Source and Contributors The repository containing the source code for this library can be found here . Contributions are welcomed. KSharpPlus is built by C6OI , Keneshin , Kurays ."
  }
}